{
  "schemaVersion": 1,
  "packId": "pack.basics",
  "packName": "Digital Logic – Basics",
  "packDescription": "",
  "chapters": [
    {
      "chapterId": "ch.basics",
      "chapterName": "Basics",
      "chapterDescription": "Master the building blocks of digital electronics! Learn how simple gates like AND, OR, and XOR form the foundation of all computer logic. By combining these basic gates, you'll create increasingly powerful circuits that perform complex operations.",
      "levels": [
        {
          "id": "lvl.not.1",
          "chapterId": "ch.basics",
          "name": "NOT Gate",
          "description": "Output should be the inverse of input.",
          "inputCount": 1,
          "outputCount": 1,
          "inputBitCounts": [
            1
          ],
          "outputBitCounts": [
            1
          ],
          "inputPinLabels": [
            {
              "name": "A",
              "abbr": "A"
            }
          ],
          "outputPinLabels": [
            {
              "name": "Y",
              "abbr": "Y"
            }
          ],
          "testVectors": [
            {
              "inputs": "0",
              "expected": "1"
            },
            {
              "inputs": "1",
              "expected": "0"
            }
          ],
          "hints": []
        },
        {
          "id": "lvl.and.1",
          "chapterId": "ch.basics",
          "name": "AND Gate",
          "description": "Output should be 1 only if both inputs are 1.",
          "inputCount": 2,
          "outputCount": 1,
          "inputBitCounts": [
            1,
            1
          ],
          "outputBitCounts": [
            1
          ],
          "inputPinLabels": [
            {
              "name": "B",
              "abbr": "B"
            },
            {
              "name": "A",
              "abbr": "A"
            }
          ],
          "outputPinLabels": [
            {
              "name": "Y",
              "abbr": "Y"
            }
          ],
          "testVectors": [
            {
              "inputs": "00",
              "expected": "0"
            },
            {
              "inputs": "01",
              "expected": "0"
            },
            {
              "inputs": "10",
              "expected": "0"
            },
            {
              "inputs": "11",
              "expected": "1"
            }
          ],
          "hints": []
        },
        {
          "id": "lvl.or.1",
          "chapterId": "ch.basics",
          "name": "OR Gate",
          "description": "Output should be 1 if either input is 1.",
          "inputCount": 2,
          "outputCount": 1,
          "inputBitCounts": [
            1,
            1
          ],
          "outputBitCounts": [
            1
          ],
          "inputPinLabels": [
            {
              "name": "B",
              "abbr": "B"
            },
            {
              "name": "A",
              "abbr": "A"
            }
          ],
          "outputPinLabels": [
            {
              "name": "Y",
              "abbr": "Y"
            }
          ],
          "testVectors": [
            {
              "inputs": "00",
              "expected": "0"
            },
            {
              "inputs": "01",
              "expected": "1"
            },
            {
              "inputs": "10",
              "expected": "1"
            },
            {
              "inputs": "11",
              "expected": "1"
            }
          ],
          "hints": []
        },
        {
          "id": "lvl.xor.1",
          "chapterId": "ch.basics",
          "name": "XOR Gate",
          "description": "Output should be 1 if exactly one input is 1.",
          "inputCount": 2,
          "outputCount": 1,
          "inputBitCounts": [
            1,
            1
          ],
          "outputBitCounts": [
            1
          ],
          "inputPinLabels": [
            {
              "name": "B",
              "abbr": "B"
            },
            {
              "name": "A",
              "abbr": "A"
            }
          ],
          "outputPinLabels": [
            {
              "name": "Y",
              "abbr": "Y"
            }
          ],
          "testVectors": [
            {
              "inputs": "00",
              "expected": "0"
            },
            {
              "inputs": "01",
              "expected": "1"
            },
            {
              "inputs": "10",
              "expected": "1"
            },
            {
              "inputs": "11",
              "expected": "0"
            }
          ],
          "hints": []
        },
        {
          "id": "lvl.nor.1",
          "chapterId": "ch.basics",
          "name": "NOR Gate",
          "description": "Output is 1 only when both inputs are 0.",
          "inputCount": 2,
          "outputCount": 1,
          "inputBitCounts": [
            1,
            1
          ],
          "outputBitCounts": [
            1
          ],
          "inputPinLabels": [
            {
              "name": "B",
              "abbr": "B"
            },
            {
              "name": "A",
              "abbr": "A"
            }
          ],
          "outputPinLabels": [
            {
              "name": "Y",
              "abbr": "Y"
            }
          ],
          "testVectors": [
            {
              "inputs": "00",
              "expected": "1"
            },
            {
              "inputs": "01",
              "expected": "0"
            },
            {
              "inputs": "10",
              "expected": "0"
            },
            {
              "inputs": "11",
              "expected": "0"
            }
          ],
          "hints": [
            "NOR is NOT OR",
            "Y = NOT (A OR B)"
          ]
        },
        {
          "id": "lvl.xnor.1",
          "chapterId": "ch.basics",
          "name": "XNOR Gate",
          "description": "Output is 1 when inputs are equal.",
          "inputCount": 2,
          "outputCount": 1,
          "inputBitCounts": [
            1,
            1
          ],
          "outputBitCounts": [
            1
          ],
          "inputPinLabels": [
            {
              "name": "B",
              "abbr": "B"
            },
            {
              "name": "A",
              "abbr": "A"
            }
          ],
          "outputPinLabels": [
            {
              "name": "Y",
              "abbr": "Y"
            }
          ],
          "testVectors": [
            {
              "inputs": "00",
              "expected": "1"
            },
            {
              "inputs": "01",
              "expected": "0"
            },
            {
              "inputs": "10",
              "expected": "0"
            },
            {
              "inputs": "11",
              "expected": "1"
            }
          ],
          "hints": []
        }
      ]
    },
    {
      "chapterId": "ch.intermediate",
      "chapterName": "Intermediate",
      "chapterDescription": "Building upon basic logic gates, these challenges introduce more complex combinational circuits, multi-input functions, and fundamental functional blocks. Master the art of combining simple gates to create sophisticated logic operations.",
      "levels": [
        {
          "id": "lvl.a_and_not_b",
          "chapterId": "ch.intermediate",
          "name": "A AND NOT B",
          "description": "Output should be 1 when A=1 and B=0.",
          "inputCount": 2,
          "outputCount": 1,
          "inputBitCounts": [
            1,
            1
          ],
          "outputBitCounts": [
            1
          ],
          "inputPinLabels": [
            {
              "name": "B",
              "abbr": "B"
            },
            {
              "name": "A",
              "abbr": "A"
            }
          ],
          "outputPinLabels": [
            {
              "name": "Y",
              "abbr": "Y"
            }
          ],
          "testVectors": [
            {
              "inputs": "00",
              "expected": "0"
            },
            {
              "inputs": "10",
              "expected": "1"
            },
            {
              "inputs": "01",
              "expected": "0"
            },
            {
              "inputs": "11",
              "expected": "0"
            }
          ],
          "hints": []
        },
        {
          "id": "lvl.a_or_not_b",
          "chapterId": "ch.intermediate",
          "name": "A OR NOT B",
          "description": "Output should be 1 when A=1 or B=0 (or both).",
          "inputCount": 2,
          "outputCount": 1,
          "inputBitCounts": [
            1,
            1
          ],
          "outputBitCounts": [
            1
          ],
          "inputPinLabels": [
            {
              "name": "B",
              "abbr": "B"
            },
            {
              "name": "A",
              "abbr": "A"
            }
          ],
          "outputPinLabels": [
            {
              "name": "Y",
              "abbr": "Y"
            }
          ],
          "testVectors": [
            {
              "inputs": "00",
              "expected": "1"
            },
            {
              "inputs": "10",
              "expected": "1"
            },
            {
              "inputs": "01",
              "expected": "0"
            },
            {
              "inputs": "11",
              "expected": "1"
            }
          ],
          "hints": []
        },
        {
          "id": "lvl.impl.1",
          "chapterId": "ch.intermediate",
          "name": "Implication (A → B)",
          "description": "(!A) OR B.",
          "inputCount": 2,
          "outputCount": 1,
          "inputBitCounts": [
            1,
            1
          ],
          "outputBitCounts": [
            1
          ],
          "inputPinLabels": [
            {
              "name": "B",
              "abbr": "B"
            },
            {
              "name": "A",
              "abbr": "A"
            }
          ],
          "outputPinLabels": [
            {
              "name": "Y",
              "abbr": "Y"
            }
          ],
          "testVectors": [
            {
              "inputs": "00",
              "expected": "1"
            },
            {
              "inputs": "01",
              "expected": "1"
            },
            {
              "inputs": "10",
              "expected": "0"
            },
            {
              "inputs": "11",
              "expected": "1"
            }
          ],
          "hints": []
        },
        {
          "id": "lvl.and3.1",
          "chapterId": "ch.intermediate",
          "name": "3-Input AND",
          "description": "Output is 1 only when A=B=C=1.",
          "inputCount": 3,
          "outputCount": 1,
          "inputBitCounts": [
            1,
            1,
            1
          ],
          "outputBitCounts": [
            1
          ],
          "inputPinLabels": [
            {
              "name": "C",
              "abbr": "C"
            },
            {
              "name": "B",
              "abbr": "B"
            },
            {
              "name": "A",
              "abbr": "A"
            }
          ],
          "outputPinLabels": [
            {
              "name": "Y",
              "abbr": "Y"
            }
          ],
          "testVectors": [
            {
              "inputs": "000",
              "expected": "0"
            },
            {
              "inputs": "001",
              "expected": "0"
            },
            {
              "inputs": "010",
              "expected": "0"
            },
            {
              "inputs": "011",
              "expected": "0"
            },
            {
              "inputs": "100",
              "expected": "0"
            },
            {
              "inputs": "101",
              "expected": "0"
            },
            {
              "inputs": "110",
              "expected": "0"
            },
            {
              "inputs": "111",
              "expected": "1"
            }
          ],
          "hints": []
        },
        {
          "id": "lvl.or3.1",
          "chapterId": "ch.intermediate",
          "name": "3-Input OR",
          "description": "Output is 1 if any input is 1.",
          "inputCount": 3,
          "outputCount": 1,
          "inputBitCounts": [
            1,
            1,
            1
          ],
          "outputBitCounts": [
            1
          ],
          "inputPinLabels": [
            {
              "name": "C",
              "abbr": "C"
            },
            {
              "name": "B",
              "abbr": "B"
            },
            {
              "name": "A",
              "abbr": "A"
            }
          ],
          "outputPinLabels": [
            {
              "name": "Y",
              "abbr": "Y"
            }
          ],
          "testVectors": [
            {
              "inputs": "000",
              "expected": "0"
            },
            {
              "inputs": "001",
              "expected": "1"
            },
            {
              "inputs": "010",
              "expected": "1"
            },
            {
              "inputs": "011",
              "expected": "1"
            },
            {
              "inputs": "100",
              "expected": "1"
            },
            {
              "inputs": "101",
              "expected": "1"
            },
            {
              "inputs": "110",
              "expected": "1"
            },
            {
              "inputs": "111",
              "expected": "1"
            }
          ],
          "hints": []
        },
        {
          "id": "lvl.maj3.1",
          "chapterId": "ch.intermediate",
          "name": "Majority",
          "description": "Output is 1 when at least two inputs are 1.",
          "inputCount": 3,
          "outputCount": 1,
          "inputBitCounts": [
            1,
            1,
            1
          ],
          "outputBitCounts": [
            1
          ],
          "inputPinLabels": [
            {
              "name": "C",
              "abbr": "C"
            },
            {
              "name": "B",
              "abbr": "B"
            },
            {
              "name": "A",
              "abbr": "A"
            }
          ],
          "outputPinLabels": [
            {
              "name": "Y",
              "abbr": "Y"
            }
          ],
          "testVectors": [
            {
              "inputs": "000",
              "expected": "0"
            },
            {
              "inputs": "001",
              "expected": "0"
            },
            {
              "inputs": "010",
              "expected": "0"
            },
            {
              "inputs": "011",
              "expected": "1"
            },
            {
              "inputs": "100",
              "expected": "0"
            },
            {
              "inputs": "101",
              "expected": "1"
            },
            {
              "inputs": "110",
              "expected": "1"
            },
            {
              "inputs": "111",
              "expected": "1"
            }
          ],
          "hints": []
        },
        {
          "id": "lvl.par3.1",
          "chapterId": "ch.intermediate",
          "name": "Parity (Odd, 3-bit)",
          "description": "Output is 1 when the number of 1s is odd.",
          "inputCount": 3,
          "outputCount": 1,
          "inputBitCounts": [
            1,
            1,
            1
          ],
          "outputBitCounts": [
            1
          ],
          "inputPinLabels": [
            {
              "name": "C",
              "abbr": "C"
            },
            {
              "name": "B",
              "abbr": "B"
            },
            {
              "name": "A",
              "abbr": "A"
            }
          ],
          "outputPinLabels": [
            {
              "name": "Y",
              "abbr": "Y"
            }
          ],
          "testVectors": [
            {
              "inputs": "000",
              "expected": "0"
            },
            {
              "inputs": "001",
              "expected": "1"
            },
            {
              "inputs": "010",
              "expected": "1"
            },
            {
              "inputs": "011",
              "expected": "0"
            },
            {
              "inputs": "100",
              "expected": "1"
            },
            {
              "inputs": "101",
              "expected": "0"
            },
            {
              "inputs": "110",
              "expected": "0"
            },
            {
              "inputs": "111",
              "expected": "1"
            }
          ],
          "hints": []
        },
        {
          "id": "lvl.atleast1zero",
          "chapterId": "ch.intermediate",
          "name": "At Least One Zero",
          "description": "Output is 1 unless both inputs are 1.",
          "inputCount": 2,
          "outputCount": 1,
          "inputBitCounts": [
            1,
            1
          ],
          "outputBitCounts": [
            1
          ],
          "inputPinLabels": [
            {
              "name": "B",
              "abbr": "B"
            },
            {
              "name": "A",
              "abbr": "A"
            }
          ],
          "outputPinLabels": [
            {
              "name": "Y",
              "abbr": "Y"
            }
          ],
          "testVectors": [
            {
              "inputs": "00",
              "expected": "1"
            },
            {
              "inputs": "01",
              "expected": "1"
            },
            {
              "inputs": "10",
              "expected": "1"
            },
            {
              "inputs": "11",
              "expected": "0"
            }
          ],
          "hints": []
        },
        {
          "id": "lvl.mux2.1",
          "chapterId": "ch.intermediate",
          "name": "2→1 MUX (S,A,B)",
          "description": "If S=0 output A; if S=1 output B.",
          "inputCount": 3,
          "outputCount": 1,
          "inputBitCounts": [
            1,
            1,
            1
          ],
          "outputBitCounts": [
            1
          ],
          "inputPinLabels": [
            {
              "name": "B",
              "abbr": "B"
            },
            {
              "name": "S",
              "abbr": "S"
            },
            {
              "name": "A",
              "abbr": "A"
            }
          ],
          "outputPinLabels": [
            {
              "name": "Y",
              "abbr": "Y"
            }
          ],
          "testVectors": [
            {
              "inputs": "000",
              "expected": "0"
            },
            {
              "inputs": "100",
              "expected": "1"
            },
            {
              "inputs": "010",
              "expected": "0"
            },
            {
              "inputs": "110",
              "expected": "0"
            },
            {
              "inputs": "001",
              "expected": "0"
            },
            {
              "inputs": "101",
              "expected": "1"
            },
            {
              "inputs": "011",
              "expected": "1"
            },
            {
              "inputs": "111",
              "expected": "1"
            }
          ],
          "hints": []
        }
      ]
    },
    {
      "chapterId": "ch.sequential",
      "chapterName": "Sequential Circuits",
      "chapterDescription": "Enter the world of memory and time! Build circuits that remember their past and create counters, latches, and flip-flops. This is where digital circuits gain the power of memory and state.",
      "levels": [
        {
          "id": "lvl.srlatch.1",
          "chapterId": "ch.sequential",
          "name": "SR Latch",
          "description": "Basic memory element. Set when S=1, Reset when R=1, Hold when both are 0.",
          "inputCount": 2,
          "outputCount": 2,
          "inputBitCounts": [
            1,
            1
          ],
          "outputBitCounts": [
            1,
            1
          ],
          "inputPinLabels": [
            {
              "name": "Reset",
              "abbr": "R"
            },
            {
              "name": "Set",
              "abbr": "S"
            }
          ],
          "outputPinLabels": [
            {
              "name": "Output",
              "abbr": "Q"
            },
            {
              "name": "Output Inverted",
              "abbr": "N"
            }
          ],
          "isSequential": true,
          "settleStepsPerVector": 2,
          "testSequences": [
            {
              "name": "Set and Reset",
              "vectors": [
                {
                  "inputs": "01",
                  "expected": "10",
                  "settleSteps": 3,
                  "isClockEdge": false
                },
                {
                  "inputs": "00",
                  "expected": "10",
                  "settleSteps": 2,
                  "isClockEdge": false
                },
                {
                  "inputs": "10",
                  "expected": "01",
                  "settleSteps": 2,
                  "isClockEdge": false
                },
                {
                  "inputs": "00",
                  "expected": "01",
                  "settleSteps": 2,
                  "isClockEdge": false
                },
                {
                  "inputs": "01",
                  "expected": "10",
                  "settleSteps": 2,
                  "isClockEdge": false
                },
                {
                  "inputs": "00",
                  "expected": "10",
                  "settleSteps": 2,
                  "isClockEdge": false
                }
              ]
            }
          ],
          "hints": [
            "Use NAND gates",
            "Q = NOT (R AND Qn)",
            "Qn = NOT (S AND Q)"
          ]
        },
        {
          "id": "lvl.dlatch.1",
          "chapterId": "ch.sequential",
          "name": "D Latch",
          "description": "Level-triggered memory element. When Enable=1, Q follows D. When Enable=0, Q holds its value (latched).",
          "inputCount": 2,
          "outputCount": 2,
          "inputBitCounts": [
            1,
            1
          ],
          "outputBitCounts": [
            1,
            1
          ],
          "inputPinLabels": [
            {
              "name": "Data",
              "abbr": "D"
            },
            {
              "name": "Enable",
              "abbr": "E"
            }
          ],
          "outputPinLabels": [
            {
              "name": "Output",
              "abbr": "Q"
            },
            {
              "name": "Output Inverted",
              "abbr": "N"
            }
          ],
          "isSequential": true,
          "settleStepsPerVector": 2,
          "testSequences": [
            {
              "name": "Transparent and Latched Modes",
              "setup": [
                "00",
                "10",
                "00"
              ],
              "vectors": [
                {
                  "inputs": "01",
                  "expected": "10",
                  "settleSteps": 2,
                  "isClockEdge": false
                },
                {
                  "inputs": "00",
                  "expected": "10",
                  "settleSteps": 2,
                  "isClockEdge": false
                },
                {
                  "inputs": "10",
                  "expected": "10",
                  "settleSteps": 2,
                  "isClockEdge": false
                },
                {
                  "inputs": "11",
                  "expected": "01",
                  "settleSteps": 2,
                  "isClockEdge": false
                },
                {
                  "inputs": "01",
                  "expected": "01",
                  "settleSteps": 2,
                  "isClockEdge": false
                },
                {
                  "inputs": "00",
                  "expected": "01",
                  "settleSteps": 2,
                  "isClockEdge": false
                },
                {
                  "inputs": "10",
                  "expected": "10",
                  "settleSteps": 2,
                  "isClockEdge": false
                }
              ]
            }
          ],
          "hints": [
            "D Latch is level-triggered, not edge-triggered",
            "When Enable=1: Q becomes D immediately (transparent mode)",
            "When Enable=0: Q holds its current value (latch mode)",
            "Can be built using NAND gates or an SR Latch with D and NOT D inputs",
            "Q' is always the complement of Q"
          ]
        },
        {
          "id": "lvl.dflipflop.1",
          "chapterId": "ch.sequential",
          "name": "D Flip-Flop",
          "description": "Data storage element. Q follows D on rising clock edge. Q' is the complement of Q. When CLK goes high, Q captures the value of D and holds it until the next rising edge.",
          "inputCount": 2,
          "outputCount": 2,
          "inputBitCounts": [
            1,
            1
          ],
          "outputBitCounts": [
            1,
            1
          ],
          "inputPinLabels": [
            {
              "name": "Data",
              "abbr": "D"
            },
            {
              "name": "Clock",
              "abbr": "C"
            }
          ],
          "outputPinLabels": [
            {
              "name": "Output",
              "abbr": "Q"
            },
            {
              "name": "Output Inverted",
              "abbr": "N"
            }
          ],
          "isSequential": true,
          "clockInputIndex": 1,
          "settleStepsPerVector": 3,
          "testSequences": [
            {
              "name": "Data Storage and Complement",
              "setup": [
                "00",
                "10",
                "00"
              ],
              "vectors": [
                {
                  "inputs": "10",
                  "expected": "10",
                  "settleSteps": 10,
                  "isClockEdge": true
                },
                {
                  "inputs": "11",
                  "expected": "10",
                  "settleSteps": 10,
                  "isClockEdge": false
                },
                {
                  "inputs": "01",
                  "expected": "10",
                  "settleSteps": 10,
                  "isClockEdge": false
                },
                {
                  "inputs": "11",
                  "expected": "01",
                  "settleSteps": 10,
                  "isClockEdge": true
                },
                {
                  "inputs": "00",
                  "expected": "01",
                  "settleSteps": 10,
                  "isClockEdge": false
                },
                {
                  "inputs": "10",
                  "expected": "10",
                  "settleSteps": 10,
                  "isClockEdge": true
                },
                {
                  "inputs": "00",
                  "expected": "10",
                  "settleSteps": 10,
                  "isClockEdge": false
                },
                {
                  "inputs": "01",
                  "expected": "10",
                  "settleSteps": 10,
                  "isClockEdge": false
                },
                {
                  "inputs": "11",
                  "expected": "01",
                  "settleSteps": 10,
                  "isClockEdge": true
                }
              ]
            }
          ],
          "hints": [
            "D flip-flop stores the D input on rising clock edge",
            "Q changes only when CLK transitions from 0 to 1",
            "Q' (Q complement) is always the opposite of Q",
            "Characteristic equation: Q(n+1) = D(n)"
          ]
        }
      ]
    },
    {
      "chapterId": "ch.arithmetic",
      "chapterName": "Arithmetic Fundamentals",
      "chapterDescription": "Learn the magic of binary math! Construct adders from simple gates, understand carry propagation, and build the mathematical foundation that powers every computer's arithmetic unit.",
      "levels": [
        {
          "id": "lvl.halfadder.1",
          "chapterId": "ch.arithmetic",
          "name": "Half Adder",
          "description": "Add two single bits. Output is sum and carry.",
          "inputCount": 2,
          "outputCount": 2,
          "inputBitCounts": [
            1,
            1
          ],
          "outputBitCounts": [
            1,
            1
          ],
          "inputPinLabels": [
            {
              "name": "B",
              "abbr": "B"
            },
            {
              "name": "A",
              "abbr": "A"
            }
          ],
          "outputPinLabels": [
            {
              "name": "Carry",
              "abbr": "C"
            },
            {
              "name": "Sum",
              "abbr": "S"
            }
          ],
          "testVectors": [
            {
              "inputs": "00",
              "expected": "00"
            },
            {
              "inputs": "01",
              "expected": "10"
            },
            {
              "inputs": "10",
              "expected": "10"
            },
            {
              "inputs": "11",
              "expected": "01"
            }
          ],
          "hints": [
            "Sum = A XOR B",
            "Carry = A AND B"
          ]
        },
        {
          "id": "lvl.adder4bit.1",
          "name": "4-bit Adder",
          "chapterId": "ch.arithmetic",
          "description": "Add two 4-bit numbers. Output is 5-bit result (4-bit sum + carry).",
          "inputCount": 8,
          "outputCount": 5,
          "inputLabels": [],
          "outputLabels": [],
          "inputBitCounts": [
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1
          ],
          "outputBitCounts": [
              1,
              1,
              1,
              1,
              1
          ],
          "inputPinLabels": [
              {
                  "name": "A0",
                  "abbr": "A0"
              },
              {
                  "name": "A1",
                  "abbr": "A1"
              },
              {
                  "name": "A2",
                  "abbr": "A2"
              },
              {
                  "name": "A3",
                  "abbr": "A3"
              },
              {
                  "name": "B0",
                  "abbr": "B0"
              },
              {
                  "name": "B1",
                  "abbr": "B1"
              },
              {
                  "name": "B2",
                  "abbr": "B2"
              },
              {
                  "name": "B3",
                  "abbr": "B3"
              }
          ],
          "outputPinLabels": [
              {
                  "name": "Carry Out",
                  "abbr": "Co"
              },
              {
                  "name": "Sum Bit 0",
                  "abbr": "S0"
              },
              {
                  "name": "Sum Bit 1",
                  "abbr": "S1"
              },
              {
                  "name": "Sum Bit 2",
                  "abbr": "S2"
              },
              {
                  "name": "Sum Bit 3",
                  "abbr": "S3"
              }
          ],
          "testVectors": [
              {
                  "inputs": "01010100",
                  "expected": "00110"
              },
              {
                  "inputs": "00000000",
                  "expected": "00000"
              },
              {
                  "inputs": "11001101",
                  "expected": "01110"
              },
              {
                  "inputs": "10001011",
                  "expected": "01110"
              },
              {
                  "inputs": "01001101",
                  "expected": "10110"
              },
              {
                  "inputs": "10000000",
                  "expected": "10000"
              },
              {
                  "inputs": "00100110",
                  "expected": "01010"
              },
              {
                  "inputs": "01001011",
                  "expected": "11110"
              },
              {
                  "inputs": "00101111",
                  "expected": "11001"
              },
              {
                  "inputs": "11010010",
                  "expected": "11110"
              },
              {
                  "inputs": "00010000",
                  "expected": "00010"
              },
              {
                  "inputs": "11110011",
                  "expected": "11011"
              },
              {
                  "inputs": "11111010",
                  "expected": "00101"
              },
              {
                  "inputs": "00010101",
                  "expected": "01001"
              },
              {
                  "inputs": "10000100",
                  "expected": "11000"
              },
              {
                  "inputs": "01100110",
                  "expected": "00110"
              },
              {
                  "inputs": "10101000",
                  "expected": "01100"
              },
              {
                  "inputs": "11110110",
                  "expected": "10101"
              },
              {
                  "inputs": "00100011",
                  "expected": "00001"
              },
              {
                  "inputs": "11010110",
                  "expected": "10001"
              },
              {
                  "inputs": "01100101",
                  "expected": "00001"
              },
              {
                  "inputs": "01010111",
                  "expected": "00011"
              },
              {
                  "inputs": "11010000",
                  "expected": "11010"
              },
              {
                  "inputs": "11011011",
                  "expected": "00011"
              },
              {
                  "inputs": "11100000",
                  "expected": "11100"
              },
              {
                  "inputs": "10000011",
                  "expected": "10110"
              },
              {
                  "inputs": "11111100",
                  "expected": "01001"
              },
              {
                  "inputs": "10101101",
                  "expected": "00001"
              },
              {
                  "inputs": "01000011",
                  "expected": "01110"
              },
              {
                  "inputs": "01110110",
                  "expected": "00101"
              },
              {
                  "inputs": "00111111",
                  "expected": "11011"
              },
              {
                  "inputs": "01101000",
                  "expected": "11100"
              },
              {
                  "inputs": "11000100",
                  "expected": "10100"
              },
              {
                  "inputs": "10001111",
                  "expected": "00001"
              },
              {
                  "inputs": "11011101",
                  "expected": "01101"
              },
              {
                  "inputs": "11110100",
                  "expected": "10001"
              },
              {
                  "inputs": "10001010",
                  "expected": "01100"
              },
              {
                  "inputs": "10111101",
                  "expected": "00011"
              },
              {
                  "inputs": "10110010",
                  "expected": "10001"
              },
              {
                  "inputs": "10111001",
                  "expected": "01101"
              },
              {
                  "inputs": "00011011",
                  "expected": "10101"
              },
              {
                  "inputs": "00010010",
                  "expected": "00110"
              },
              {
                  "inputs": "10010111",
                  "expected": "11101"
              },
              {
                  "inputs": "11010001",
                  "expected": "11001"
              },
              {
                  "inputs": "00101110",
                  "expected": "11010"
              },
              {
                  "inputs": "10100010",
                  "expected": "10010"
              },
              {
                  "inputs": "01101011",
                  "expected": "11001"
              },
              {
                  "inputs": "00111101",
                  "expected": "11101"
              },
              {
                  "inputs": "10111100",
                  "expected": "00001"
              },
              {
                  "inputs": "10010000",
                  "expected": "10010"
              },
              {
                  "inputs": "00000001",
                  "expected": "00010"
              },
              {
                  "inputs": "01001111",
                  "expected": "10001"
              },
              {
                  "inputs": "00100001",
                  "expected": "00110"
              },
              {
                  "inputs": "11001111",
                  "expected": "01001"
              },
              {
                  "inputs": "01110011",
                  "expected": "01011"
              },
              {
                  "inputs": "10110100",
                  "expected": "11110"
              },
              {
                  "inputs": "10100100",
                  "expected": "11100"
              },
              {
                  "inputs": "10001100",
                  "expected": "00100"
              },
              {
                  "inputs": "11010101",
                  "expected": "10101"
              },
              {
                  "inputs": "01000101",
                  "expected": "00110"
              },
              {
                  "inputs": "01111111",
                  "expected": "10111"
              },
              {
                  "inputs": "11111110",
                  "expected": "01101"
              },
              {
                  "inputs": "01010010",
                  "expected": "01110"
              },
              {
                  "inputs": "01010011",
                  "expected": "01101"
              },
              {
                  "inputs": "10001110",
                  "expected": "00010"
              },
              {
                  "inputs": "01000110",
                  "expected": "00010"
              },
              {
                  "inputs": "01011010",
                  "expected": "11110"
              },
              {
                  "inputs": "10000111",
                  "expected": "11110"
              },
              {
                  "inputs": "10000001",
                  "expected": "10010"
              },
              {
                  "inputs": "01011111",
                  "expected": "10011"
              },
              {
                  "inputs": "00111001",
                  "expected": "10101"
              },
              {
                  "inputs": "10011111",
                  "expected": "00011"
              },
              {
                  "inputs": "11010011",
                  "expected": "11101"
              },
              {
                  "inputs": "11100001",
                  "expected": "11110"
              },
              {
                  "inputs": "00001110",
                  "expected": "11100"
              },
              {
                  "inputs": "10001101",
                  "expected": "00110"
              },
              {
                  "inputs": "00100101",
                  "expected": "01110"
              },
              {
                  "inputs": "00001100",
                  "expected": "11000"
              },
              {
                  "inputs": "10011000",
                  "expected": "01010"
              },
              {
                  "inputs": "10000010",
                  "expected": "10100"
              },
              {
                  "inputs": "01000001",
                  "expected": "01010"
              },
              {
                  "inputs": "11101001",
                  "expected": "00001"
              },
              {
                  "inputs": "10001000",
                  "expected": "01000"
              },
              {
                  "inputs": "01011100",
                  "expected": "10110"
              },
              {
                  "inputs": "01111011",
                  "expected": "11011"
              },
              {
                  "inputs": "00001011",
                  "expected": "10110"
              },
              {
                  "inputs": "00111011",
                  "expected": "10011"
              },
              {
                  "inputs": "10110001",
                  "expected": "10101"
              },
              {
                  "inputs": "01010000",
                  "expected": "01010"
              },
              {
                  "inputs": "00010111",
                  "expected": "01101"
              },
              {
                  "inputs": "10101110",
                  "expected": "00110"
              },
              {
                  "inputs": "00000110",
                  "expected": "01100"
              },
              {
                  "inputs": "11101100",
                  "expected": "01010"
              },
              {
                  "inputs": "10101011",
                  "expected": "01001"
              },
              {
                  "inputs": "10010110",
                  "expected": "11110"
              },
              {
                  "inputs": "00110101",
                  "expected": "01101"
              },
              {
                  "inputs": "00101101",
                  "expected": "11110"
              },
              {
                  "inputs": "10100101",
                  "expected": "11110"
              },
              {
                  "inputs": "01010001",
                  "expected": "01001"
              },
              {
                  "inputs": "00100111",
                  "expected": "01001"
              }
          ]
      }
      ]
    },
    {
      "chapterId": "ch.advanced_arithmetic",
      "chapterName": "Advanced Arithmetic",
      "chapterDescription": "Reach the pinnacle of digital design! Build subtraction circuits using two's complement, create comparators, and finally construct a complete ALU - the heart of every processor that performs all arithmetic and logic operations.",
      "levels": [
        {
          "id": "lvl.subtractor.1",
          "chapterId": "ch.advanced_arithmetic",
          "name": "4-bit Subtractor",
          "description": "Subtract B from A using two's complement. Output is difference and borrow.",
          "inputCount": 8,
          "outputCount": 5,
          "inputBitCounts": [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1
          ],
          "outputBitCounts": [
            1,
            1,
            1,
            1,
            1
          ],
          "inputPinLabels": [
            {
              "name": "B0",
              "abbr": "B0"
            },
            {
              "name": "B1",
              "abbr": "B1"
            },
            {
              "name": "B2",
              "abbr": "B2"
            },
            {
              "name": "B3",
              "abbr": "B3"
            },
            {
              "name": "A0",
              "abbr": "A0"
            },
            {
              "name": "A1",
              "abbr": "A1"
            },
            {
              "name": "A2",
              "abbr": "A2"
            },
            {
              "name": "A3",
              "abbr": "A3"
            }
          ],
          "outputPinLabels": [
            {
              "name": "Borrow",
              "abbr": "Bo"
            },
            {
              "name": "Difference 0",
              "abbr": "D0"
            },
            {
              "name": "Difference 1",
              "abbr": "D1"
            },
            {
              "name": "Difference 2",
              "abbr": "D2"
            },
            {
              "name": "Difference 3",
              "abbr": "D3"
            }
          ],
          "testVectors": [
            {
              "inputs": "01011010",
              "expected": "10101"
            },
            {
              "inputs": "01110001",
              "expected": "01101"
            },
            {
              "inputs": "10000010",
              "expected": "10110"
            },
            {
              "inputs": "00000100",
              "expected": "01110"
            },
            {
              "inputs": "00100111",
              "expected": "01100"
            },
            {
              "inputs": "10110111",
              "expected": "11110"
            },
            {
              "inputs": "01100111",
              "expected": "00010"
            },
            {
              "inputs": "11000111",
              "expected": "10100"
            },
            {
              "inputs": "01110100",
              "expected": "00111"
            },
            {
              "inputs": "10111111",
              "expected": "01110"
            },
            {
              "inputs": "11110001",
              "expected": "11101"
            },
            {
              "inputs": "01111000",
              "expected": "10111"
            },
            {
              "inputs": "11100110",
              "expected": "10001"
            },
            {
              "inputs": "11000100",
              "expected": "10001"
            },
            {
              "inputs": "11101000",
              "expected": "01101"
            },
            {
              "inputs": "01110010",
              "expected": "01011"
            },
            {
              "inputs": "01000011",
              "expected": "01100"
            },
            {
              "inputs": "10010011",
              "expected": "10110"
            },
            {
              "inputs": "11100001",
              "expected": "11110"
            },
            {
              "inputs": "01011100",
              "expected": "11101"
            },
            {
              "inputs": "00110110",
              "expected": "01101"
            },
            {
              "inputs": "00000000",
              "expected": "00001"
            },
            {
              "inputs": "10011011",
              "expected": "00110"
            },
            {
              "inputs": "10101111",
              "expected": "01100"
            },
            {
              "inputs": "00011001",
              "expected": "11110"
            },
            {
              "inputs": "11001110",
              "expected": "00110"
            },
            {
              "inputs": "11001001",
              "expected": "01010"
            },
            {
              "inputs": "10101010",
              "expected": "00001"
            },
            {
              "inputs": "01101111",
              "expected": "11100"
            },
            {
              "inputs": "00001000",
              "expected": "11110"
            },
            {
              "inputs": "10111101",
              "expected": "01001"
            },
            {
              "inputs": "11000001",
              "expected": "11010"
            },
            {
              "inputs": "01101000",
              "expected": "10101"
            },
            {
              "inputs": "00111100",
              "expected": "10011"
            },
            {
              "inputs": "10011101",
              "expected": "01110"
            },
            {
              "inputs": "00100010",
              "expected": "00001"
            },
            {
              "inputs": "00111111",
              "expected": "10110"
            },
            {
              "inputs": "01111111",
              "expected": "11110"
            },
            {
              "inputs": "00110010",
              "expected": "00011"
            },
            {
              "inputs": "01000100",
              "expected": "00001"
            },
            {
              "inputs": "11110000",
              "expected": "11111"
            },
            {
              "inputs": "11111001",
              "expected": "01101"
            },
            {
              "inputs": "11110101",
              "expected": "10101"
            },
            {
              "inputs": "11111011",
              "expected": "01001"
            },
            {
              "inputs": "10001000",
              "expected": "00001"
            },
            {
              "inputs": "11110111",
              "expected": "10001"
            },
            {
              "inputs": "00100100",
              "expected": "01001"
            },
            {
              "inputs": "11101010",
              "expected": "01001"
            },
            {
              "inputs": "01100101",
              "expected": "00110"
            },
            {
              "inputs": "01100000",
              "expected": "01101"
            },
            {
              "inputs": "01110111",
              "expected": "00001"
            },
            {
              "inputs": "01001011",
              "expected": "10100"
            },
            {
              "inputs": "11111101",
              "expected": "00101"
            },
            {
              "inputs": "11011100",
              "expected": "00011"
            },
            {
              "inputs": "11001000",
              "expected": "01001"
            },
            {
              "inputs": "10001110",
              "expected": "01010"
            },
            {
              "inputs": "10000110",
              "expected": "11010"
            },
            {
              "inputs": "01001101",
              "expected": "11100"
            },
            {
              "inputs": "00100000",
              "expected": "00101"
            },
            {
              "inputs": "10110000",
              "expected": "10111"
            },
            {
              "inputs": "00000001",
              "expected": "00010"
            },
            {
              "inputs": "11100010",
              "expected": "11001"
            },
            {
              "inputs": "00101110",
              "expected": "10110"
            },
            {
              "inputs": "11010110",
              "expected": "10101"
            },
            {
              "inputs": "11101111",
              "expected": "00010"
            },
            {
              "inputs": "10001001",
              "expected": "00010"
            },
            {
              "inputs": "10101110",
              "expected": "01110"
            },
            {
              "inputs": "10111001",
              "expected": "00101"
            },
            {
              "inputs": "11110100",
              "expected": "10111"
            },
            {
              "inputs": "10000001",
              "expected": "10010"
            },
            {
              "inputs": "01111100",
              "expected": "11011"
            },
            {
              "inputs": "01000101",
              "expected": "00010"
            },
            {
              "inputs": "01010010",
              "expected": "01101"
            },
            {
              "inputs": "01110011",
              "expected": "01001"
            },
            {
              "inputs": "11001010",
              "expected": "01110"
            },
            {
              "inputs": "01101001",
              "expected": "10110"
            },
            {
              "inputs": "00110011",
              "expected": "00001"
            },
            {
              "inputs": "11010000",
              "expected": "11011"
            },
            {
              "inputs": "00110000",
              "expected": "00111"
            },
            {
              "inputs": "00001101",
              "expected": "10100"
            },
            {
              "inputs": "00111101",
              "expected": "10001"
            },
            {
              "inputs": "11011110",
              "expected": "00101"
            },
            {
              "inputs": "01110110",
              "expected": "00011"
            },
            {
              "inputs": "01011011",
              "expected": "10110"
            },
            {
              "inputs": "01000010",
              "expected": "01110"
            },
            {
              "inputs": "11010101",
              "expected": "10001"
            },
            {
              "inputs": "11101011",
              "expected": "01010"
            },
            {
              "inputs": "00100110",
              "expected": "01110"
            },
            {
              "inputs": "00000111",
              "expected": "01000"
            },
            {
              "inputs": "00111000",
              "expected": "11011"
            },
            {
              "inputs": "00100011",
              "expected": "00010"
            },
            {
              "inputs": "01110000",
              "expected": "01111"
            },
            {
              "inputs": "11111100",
              "expected": "00111"
            },
            {
              "inputs": "00110101",
              "expected": "01001"
            },
            {
              "inputs": "10100011",
              "expected": "10010"
            },
            {
              "inputs": "11000011",
              "expected": "11100"
            },
            {
              "inputs": "10010100",
              "expected": "11101"
            },
            {
              "inputs": "10011000",
              "expected": "00011"
            },
            {
              "inputs": "10010110",
              "expected": "11001"
            },
            {
              "inputs": "11100111",
              "expected": "10010"
            }
          ],
          "hints": [
            "Use two's complement: A - B = A + (~B + 1)",
            "Invert B, add 1, then use 4-bit adder",
            "Borrow indicates negative result"
          ]
        },
        {
          "id": "lvl.comparator.1",
          "chapterId": "ch.advanced_arithmetic",
          "name": "4-bit Comparator",
          "description": "Compare two 4-bit numbers. Output A>B, A=B, A<B.",
          "inputCount": 8,
          "outputCount": 3,
          "inputBitCounts": [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1
          ],
          "outputBitCounts": [
            1,
            1,
            1
          ],
          "inputPinLabels": [
            {
              "name": "A0",
              "abbr": "A0"
            },
            {
              "name": "A1",
              "abbr": "A1"
            },
            {
              "name": "A2",
              "abbr": "A2"
            },
            {
              "name": "A3",
              "abbr": "A3"
            },
            {
              "name": "B0",
              "abbr": "B0"
            },
            {
              "name": "B1",
              "abbr": "B1"
            },
            {
              "name": "B2",
              "abbr": "B2"
            },
            {
              "name": "B3",
              "abbr": "B3"
            }
          ],
          "outputPinLabels": [
            {
              "name": "A < B",
              "abbr": "LT"
            },
            {
              "name": "A = B",
              "abbr": "EQ"
            },
            {
              "name": "A > B",
              "abbr": "GT"
            }
          ],
          "testVectors": [
            {
              "inputs": "00000000",
              "expected": "010"
            },
            {
              "inputs": "10000000",
              "expected": "001"
            },
            {
              "inputs": "01000000",
              "expected": "001"
            },
            {
              "inputs": "11000000",
              "expected": "001"
            },
            {
              "inputs": "10001000",
              "expected": "010"
            },
            {
              "inputs": "01001000",
              "expected": "001"
            },
            {
              "inputs": "11001000",
              "expected": "001"
            },
            {
              "inputs": "01000100",
              "expected": "010"
            },
            {
              "inputs": "11000100",
              "expected": "001"
            },
            {
              "inputs": "11001100",
              "expected": "010"
            },
            {
              "inputs": "00100010",
              "expected": "010"
            },
            {
              "inputs": "10101010",
              "expected": "010"
            },
            {
              "inputs": "01100110",
              "expected": "010"
            },
            {
              "inputs": "11101110",
              "expected": "010"
            },
            {
              "inputs": "00010001",
              "expected": "010"
            },
            {
              "inputs": "10011001",
              "expected": "010"
            },
            {
              "inputs": "01010101",
              "expected": "010"
            },
            {
              "inputs": "11011101",
              "expected": "010"
            },
            {
              "inputs": "00110011",
              "expected": "010"
            },
            {
              "inputs": "10111011",
              "expected": "010"
            },
            {
              "inputs": "01110111",
              "expected": "010"
            },
            {
              "inputs": "01110111",
              "expected": "010"
            },
            {
              "inputs": "11000011",
              "expected": "100"
            },
            {
              "inputs": "11001111",
              "expected": "100"
            }
          ],
          "hints": [
            "A = B when all bits match",
            "A > B when MSB differs and A_MSB=1, or MSB same and A > B in lower bits",
            "A < B when neither A > B nor A = B",
            "Compare bits from most significant to least significant"
          ]
        },
        {
        "id": "lvl.alu_simple.1",
        "name": "Simple ALU (Add/Sub)",
        "chapterId": "ch.advanced_arithmetic",
        "description": "4-bit ALU with add/subtract operations. Op=0: add, Op=1: subtract.",
        "inputCount": 9,
        "outputCount": 5,
        "inputLabels": [],
        "outputLabels": [],
        "inputBitCounts": [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1
        ],
        "outputBitCounts": [
            1,
            1,
            1,
            1,
            1
        ],
        "inputPinLabels": [
            {
                "name": "A0",
                "abbr": "A0"
            },
            {
                "name": "A1",
                "abbr": "A1"
            },
            {
                "name": "A2",
                "abbr": "A2"
            },
            {
                "name": "A3",
                "abbr": "A3"
            },
            {
                "name": "B0",
                "abbr": "B0"
            },
            {
                "name": "B1",
                "abbr": "B1"
            },
            {
                "name": "B2",
                "abbr": "B2"
            },
            {
                "name": "B3",
                "abbr": "B3"
            },
            {
                "name": "Op",
                "abbr": "Op"
            }
        ],
        "outputPinLabels": [
            {
                "name": "Carry/Borrow",
                "abbr": "C/B"
            },
            {
                "name": "Result Bit 0",
                "abbr": "R0"
            },
            {
                "name": "Result Bit 1",
                "abbr": "R1"
            },
            {
                "name": "Result Bit 2",
                "abbr": "R2"
            },
            {
                "name": "Result Bit 3",
                "abbr": "R3"
            }
        ],
        "testVectors": [
            {
                "inputs": "000011110",
                "expected": "10000"
            },
            {
                "inputs": "110100001",
                "expected": "10110"
            },
            {
                "inputs": "011110101",
                "expected": "10101"
            },
            {
                "inputs": "001100101",
                "expected": "00111"
            },
            {
                "inputs": "111000001",
                "expected": "11010"
            },
            {
                "inputs": "111101010",
                "expected": "00111"
            },
            {
                "inputs": "011111111",
                "expected": "00001"
            },
            {
                "inputs": "000100000",
                "expected": "00100"
            },
            {
                "inputs": "011000101",
                "expected": "10010"
            },
            {
                "inputs": "111110100",
                "expected": "10001"
            },
            {
                "inputs": "110010010",
                "expected": "10111"
            },
            {
                "inputs": "010001111",
                "expected": "01001"
            },
            {
                "inputs": "000110000",
                "expected": "00110"
            },
            {
                "inputs": "100011101",
                "expected": "11000"
            },
            {
                "inputs": "010010111",
                "expected": "11011"
            },
            {
                "inputs": "100000000",
                "expected": "00001"
            },
            {
                "inputs": "000011101",
                "expected": "10111"
            },
            {
                "inputs": "111110001",
                "expected": "11101"
            },
            {
                "inputs": "110101011",
                "expected": "01000"
            },
            {
                "inputs": "010110111",
                "expected": "11111"
            },
            {
                "inputs": "111110000",
                "expected": "11111"
            },
            {
                "inputs": "010101010",
                "expected": "00000"
            },
            {
                "inputs": "001000111",
                "expected": "00101"
            },
            {
                "inputs": "000100010",
                "expected": "00000"
            },
            {
                "inputs": "010000100",
                "expected": "11110"
            },
            {
                "inputs": "010010000",
                "expected": "10010"
            },
            {
                "inputs": "010101101",
                "expected": "01011"
            },
            {
                "inputs": "001001111",
                "expected": "11001"
            },
            {
                "inputs": "110010000",
                "expected": "10011"
            },
            {
                "inputs": "111001111",
                "expected": "01000"
            },
            {
                "inputs": "100111001",
                "expected": "10101"
            },
            {
                "inputs": "100011010",
                "expected": "10111"
            },
            {
                "inputs": "100010000",
                "expected": "00011"
            },
            {
                "inputs": "010000001",
                "expected": "10010"
            },
            {
                "inputs": "000110001",
                "expected": "00101"
            },
            {
                "inputs": "001110001",
                "expected": "01101"
            },
            {
                "inputs": "011001010",
                "expected": "01110"
            },
            {
                "inputs": "111010000",
                "expected": "11011"
            },
            {
                "inputs": "100101110",
                "expected": "11010"
            },
            {
                "inputs": "011011101",
                "expected": "00001"
            },
            {
                "inputs": "101000110",
                "expected": "00010"
            },
            {
                "inputs": "001001000",
                "expected": "10000"
            },
            {
                "inputs": "001100100",
                "expected": "00100"
            },
            {
                "inputs": "011011100",
                "expected": "00010"
            },
            {
                "inputs": "100100000",
                "expected": "00101"
            },
            {
                "inputs": "100011111",
                "expected": "11100"
            },
            {
                "inputs": "011100101",
                "expected": "10111"
            },
            {
                "inputs": "111111001",
                "expected": "00011"
            },
            {
                "inputs": "110001101",
                "expected": "00110"
            },
            {
                "inputs": "010101000",
                "expected": "00100"
            },
            {
                "inputs": "011001000",
                "expected": "01000"
            },
            {
                "inputs": "110011111",
                "expected": "00010"
            },
            {
                "inputs": "111101101",
                "expected": "01000"
            },
            {
                "inputs": "110111010",
                "expected": "01001"
            },
            {
                "inputs": "010010100",
                "expected": "11100"
            },
            {
                "inputs": "110001010",
                "expected": "01100"
            },
            {
                "inputs": "011001101",
                "expected": "00010"
            },
            {
                "inputs": "100100101",
                "expected": "01110"
            },
            {
                "inputs": "000110100",
                "expected": "01010"
            },
            {
                "inputs": "001111101",
                "expected": "11001"
            },
            {
                "inputs": "000000000",
                "expected": "00000"
            },
            {
                "inputs": "100010010",
                "expected": "00111"
            },
            {
                "inputs": "010011100",
                "expected": "01100"
            },
            {
                "inputs": "000111010",
                "expected": "11101"
            },
            {
                "inputs": "100110111",
                "expected": "01010"
            },
            {
                "inputs": "110101001",
                "expected": "01110"
            },
            {
                "inputs": "101100100",
                "expected": "00011"
            },
            {
                "inputs": "111100110",
                "expected": "10111"
            },
            {
                "inputs": "110110101",
                "expected": "11101"
            },
            {
                "inputs": "011110100",
                "expected": "10111"
            },
            {
                "inputs": "000111001",
                "expected": "11001"
            },
            {
                "inputs": "011110001",
                "expected": "11101"
            },
            {
                "inputs": "101100001",
                "expected": "01110"
            },
            {
                "inputs": "110000101",
                "expected": "11010"
            },
            {
                "inputs": "110001001",
                "expected": "01010"
            },
            {
                "inputs": "111001011",
                "expected": "00000"
            },
            {
                "inputs": "110000001",
                "expected": "10010"
            },
            {
                "inputs": "010010011",
                "expected": "10111"
            },
            {
                "inputs": "000111000",
                "expected": "11010"
            },
            {
                "inputs": "010100111",
                "expected": "11101"
            },
            {
                "inputs": "010110100",
                "expected": "11010"
            },
            {
                "inputs": "011010010",
                "expected": "11100"
            },
            {
                "inputs": "101101110",
                "expected": "10110"
            },
            {
                "inputs": "101011100",
                "expected": "10111"
            },
            {
                "inputs": "001000000",
                "expected": "01000"
            },
            {
                "inputs": "000011010",
                "expected": "11000"
            },
            {
                "inputs": "100011011",
                "expected": "10100"
            },
            {
                "inputs": "000001001",
                "expected": "11100"
            },
            {
                "inputs": "111011011",
                "expected": "00010"
            },
            {
                "inputs": "000101000",
                "expected": "11000"
            },
            {
                "inputs": "010101001",
                "expected": "00110"
            },
            {
                "inputs": "101110100",
                "expected": "00001"
            },
            {
                "inputs": "101001101",
                "expected": "10110"
            },
            {
                "inputs": "110111110",
                "expected": "00101"
            },
            {
                "inputs": "000110101",
                "expected": "01001"
            },
            {
                "inputs": "010111011",
                "expected": "00001"
            },
            {
                "inputs": "001000010",
                "expected": "01110"
            },
            {
                "inputs": "011000000",
                "expected": "11000"
            },
            {
                "inputs": "111000011",
                "expected": "11110"
            },
            {
                "inputs": "001011100",
                "expected": "11100"
            }
        ]
    },
        {
          "id": "lvl.alu_complete.1",
          "chapterId": "ch.advanced_arithmetic",
          "name": "Complete 4-bit ALU",
          "description": "Full ALU with 4 operations: AND, OR, ADD, SUB. 2-bit operation select.",
          "inputCount": 10,
          "outputCount": 5,
          "inputBitCounts": [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1
          ],
          "outputBitCounts": [
            1,
            1,
            1,
            1,
            1
          ],
          "inputPinLabels": [
            {
              "name": "A0",
              "abbr": "A0"
            },
            {
              "name": "A1",
              "abbr": "A1"
            },
            {
              "name": "A2",
              "abbr": "A2"
            },
            {
              "name": "A3",
              "abbr": "A3"
            },
            {
              "name": "B0",
              "abbr": "B0"
            },
            {
              "name": "B1",
              "abbr": "B1"
            },
            {
              "name": "B2",
              "abbr": "B2"
            },
            {
              "name": "B3",
              "abbr": "B3"
            },
            {
              "name": "Op0",
              "abbr": "Op0"
            },
            {
              "name": "Op1",
              "abbr": "Op1"
            }
          ],
          "outputPinLabels": [
            {
              "name": "Flag",
              "abbr": "F"
            },
            {
              "name": "Result Bit 0",
              "abbr": "R0"
            },
            {
              "name": "Result Bit 1",
              "abbr": "R1"
            },
            {
              "name": "Result Bit 2",
              "abbr": "R2"
            },
            {
              "name": "Result Bit 3",
              "abbr": "R3"
            }
          ],
          "testVectors": [
            {
              "inputs": "0000000000",
              "expected": "00000"
            },
            {
              "inputs": "1000000000",
              "expected": "00000"
            },
            {
              "inputs": "0100000000",
              "expected": "00000"
            },
            {
              "inputs": "1100000000",
              "expected": "00000"
            },
            {
              "inputs": "0010000000",
              "expected": "10000"
            },
            {
              "inputs": "1010000000",
              "expected": "00001"
            },
            {
              "inputs": "0110000000",
              "expected": "10000"
            },
            {
              "inputs": "1110000000",
              "expected": "11111"
            },
            {
              "inputs": "0001000000",
              "expected": "01000"
            },
            {
              "inputs": "1001000000",
              "expected": "00001"
            },
            {
              "inputs": "0101000000",
              "expected": "01000"
            },
            {
              "inputs": "1101000000",
              "expected": "01111"
            },
            {
              "inputs": "0011000000",
              "expected": "11000"
            },
            {
              "inputs": "1011000000",
              "expected": "00001"
            },
            {
              "inputs": "0111000000",
              "expected": "11000"
            },
            {
              "inputs": "1111000000",
              "expected": "10111"
            },
            {
              "inputs": "1101100000",
              "expected": "01011"
            },
            {
              "inputs": "0011100000",
              "expected": "11100"
            },
            {
              "inputs": "1011100000",
              "expected": "00001"
            },
            {
              "inputs": "0111100000",
              "expected": "11100"
            },
            {
              "inputs": "1111100000",
              "expected": "10011"
            },
            {
              "inputs": "0000010000",
              "expected": "00010"
            },
            {
              "inputs": "1000010000",
              "expected": "00001"
            },
            {
              "inputs": "0100010000",
              "expected": "00010"
            },
            {
              "inputs": "1100010000",
              "expected": "00011"
            },
            {
              "inputs": "0010010000",
              "expected": "10010"
            },
            {
              "inputs": "1010010000",
              "expected": "00001"
            },
            {
              "inputs": "0110010000",
              "expected": "10010"
            },
            {
              "inputs": "1110010000",
              "expected": "11101"
            },
            {
              "inputs": "0001010000",
              "expected": "01010"
            },
            {
              "inputs": "1001010000",
              "expected": "00001"
            },
            {
              "inputs": "0101010000",
              "expected": "01010"
            },
            {
              "inputs": "1101010000",
              "expected": "01101"
            },
            {
              "inputs": "0011010000",
              "expected": "11010"
            },
            {
              "inputs": "1011010000",
              "expected": "00001"
            },
            {
              "inputs": "0111010000",
              "expected": "11010"
            },
            {
              "inputs": "1111010000",
              "expected": "10101"
            },
            {
              "inputs": "0000110000",
              "expected": "00110"
            },
            {
              "inputs": "1000110000",
              "expected": "00001"
            },
            {
              "inputs": "0100110000",
              "expected": "00110"
            },
            {
              "inputs": "1100110000",
              "expected": "00101"
            },
            {
              "inputs": "0010110000",
              "expected": "10110"
            },
            {
              "inputs": "1010110000",
              "expected": "00001"
            },
            {
              "inputs": "0110110000",
              "expected": "10110"
            },
            {
              "inputs": "1110110000",
              "expected": "11001"
            },
            {
              "inputs": "0001110000",
              "expected": "01110"
            },
            {
              "inputs": "1001110000",
              "expected": "00001"
            },
            {
              "inputs": "0101110000",
              "expected": "01110"
            },
            {
              "inputs": "1101110000",
              "expected": "01001"
            },
            {
              "inputs": "0011110000",
              "expected": "11110"
            },
            {
              "inputs": "1011110000",
              "expected": "00001"
            },
            {
              "inputs": "0111110000",
              "expected": "11110"
            },
            {
              "inputs": "1111110000",
              "expected": "10001"
            },
            {
              "inputs": "0000000100",
              "expected": "10000"
            },
            {
              "inputs": "1000000100",
              "expected": "00000"
            },
            {
              "inputs": "0100000100",
              "expected": "10000"
            },
            {
              "inputs": "1100000100",
              "expected": "10000"
            },
            {
              "inputs": "0010000100",
              "expected": "10000"
            },
            {
              "inputs": "1010000100",
              "expected": "10000"
            },
            {
              "inputs": "0110000100",
              "expected": "01000"
            },
            {
              "inputs": "0001101000",
              "expected": "11100"
            },
            {
              "inputs": "1001101000",
              "expected": "00001"
            },
            {
              "inputs": "0101101000",
              "expected": "11100"
            },
            {
              "inputs": "1101101000",
              "expected": "11011"
            },
            {
              "inputs": "0011101000",
              "expected": "11100"
            },
            {
              "inputs": "1011101000",
              "expected": "10001"
            },
            {
              "inputs": "0111101000",
              "expected": "00010"
            },
            {
              "inputs": "1111101000",
              "expected": "01011"
            },
            {
              "inputs": "0000011000",
              "expected": "10010"
            },
            {
              "inputs": "1000011000",
              "expected": "00001"
            },
            {
              "inputs": "0100011000",
              "expected": "10010"
            },
            {
              "inputs": "1100011000",
              "expected": "10011"
            },
            {
              "inputs": "0010011000",
              "expected": "10010"
            },
            {
              "inputs": "1010011000",
              "expected": "10001"
            },
            {
              "inputs": "0110011000",
              "expected": "01010"
            },
            {
              "inputs": "1110011000",
              "expected": "00011"
            },
            {
              "inputs": "0001011000",
              "expected": "11010"
            },
            {
              "inputs": "1001011000",
              "expected": "00001"
            },
            {
              "inputs": "0101011000",
              "expected": "11010"
            },
            {
              "inputs": "1101011000",
              "expected": "11101"
            },
            {
              "inputs": "0011011000",
              "expected": "11010"
            },
            {
              "inputs": "1011011000",
              "expected": "10001"
            },
            {
              "inputs": "0111011000",
              "expected": "00110"
            },
            {
              "inputs": "1111011000",
              "expected": "01101"
            },
            {
              "inputs": "0000111000",
              "expected": "10110"
            },
            {
              "inputs": "1000111000",
              "expected": "00001"
            },
            {
              "inputs": "0100111000",
              "expected": "10110"
            },
            {
              "inputs": "1100111000",
              "expected": "10101"
            },
            {
              "inputs": "0010111000",
              "expected": "10110"
            },
            {
              "inputs": "1010111000",
              "expected": "10001"
            },
            {
              "inputs": "0110111000",
              "expected": "01110"
            },
            {
              "inputs": "1110111000",
              "expected": "00101"
            },
            {
              "inputs": "0001111000",
              "expected": "11110"
            },
            {
              "inputs": "1001111000",
              "expected": "00001"
            },
            {
              "inputs": "0101111000",
              "expected": "11110"
            },
            {
              "inputs": "1101111000",
              "expected": "11001"
            },
            {
              "inputs": "0011111000",
              "expected": "11111"
            },
            {
              "inputs": "1011111000",
              "expected": "10001"
            },
            {
              "inputs": "1110100100",
              "expected": "10111"
            },
            {
              "inputs": "0001100110",
              "expected": "01100"
            },
            {
              "inputs": "0010000110",
              "expected": "11000"
            },
            {
              "inputs": "1010000110",
              "expected": "10000"
            },
            {
              "inputs": "0110000110",
              "expected": "00100"
            },
            {
              "inputs": "1110000110",
              "expected": "01000"
            },
            {
              "inputs": "0001000110",
              "expected": "11000"
            },
            {
              "inputs": "1001000110",
              "expected": "01000"
            },
            {
              "inputs": "0101000110",
              "expected": "10100"
            },
            {
              "inputs": "1101000110",
              "expected": "10000"
            },
            {
              "inputs": "0011000110",
              "expected": "11000"
            },
            {
              "inputs": "1011000110",
              "expected": "11000"
            },
            {
              "inputs": "0111000110",
              "expected": "01100"
            },
            {
              "inputs": "1111000110",
              "expected": "00000"
            },
            {
              "inputs": "0000101100",
              "expected": "11100"
            },
            {
              "inputs": "1000101100",
              "expected": "00001"
            },
            {
              "inputs": "0100101100",
              "expected": "11100"
            },
            {
              "inputs": "1100101100",
              "expected": "11111"
            },
            {
              "inputs": "0010101100",
              "expected": "11100"
            },
            {
              "inputs": "1010101100",
              "expected": "10001"
            },
            {
              "inputs": "0110101100",
              "expected": "00010"
            },
            {
              "inputs": "1110101100",
              "expected": "01111"
            },
            {
              "inputs": "0001101100",
              "expected": "11100"
            },
            {
              "inputs": "1001101100",
              "expected": "01001"
            },
            {
              "inputs": "0101101100",
              "expected": "10010"
            },
            {
              "inputs": "1101101100",
              "expected": "10111"
            },
            {
              "inputs": "0011101100",
              "expected": "11100"
            },
            {
              "inputs": "1011101100",
              "expected": "11001"
            },
            {
              "inputs": "0111101100",
              "expected": "01010"
            },
            {
              "inputs": "1111101100",
              "expected": "00111"
            },
            {
              "inputs": "0000001110",
              "expected": "11010"
            },
            {
              "inputs": "1000001110",
              "expected": "00001"
            },
            {
              "inputs": "0100001110",
              "expected": "11010"
            },
            {
              "inputs": "1100001110",
              "expected": "11011"
            },
            {
              "inputs": "0010001110",
              "expected": "11010"
            },
            {
              "inputs": "1010001110",
              "expected": "10001"
            },
            {
              "inputs": "0110001110",
              "expected": "00110"
            },
            {
              "inputs": "1110001110",
              "expected": "01011"
            },
            {
              "inputs": "0001001110",
              "expected": "11010"
            },
            {
              "inputs": "1001001110",
              "expected": "01001"
            },
            {
              "inputs": "0101001110",
              "expected": "10110"
            },
            {
              "inputs": "1101001110",
              "expected": "10011"
            },
            {
              "inputs": "0011001110",
              "expected": "11010"
            },
            {
              "inputs": "1011001110",
              "expected": "11001"
            },
            {
              "inputs": "0111001110",
              "expected": "01110"
            },
            {
              "inputs": "1111001110",
              "expected": "00011"
            },
            {
              "inputs": "0000011110",
              "expected": "11110"
            },
            {
              "inputs": "1000011110",
              "expected": "00001"
            },
            {
              "inputs": "0100011110",
              "expected": "11110"
            },
            {
              "inputs": "1100011110",
              "expected": "11101"
            },
            {
              "inputs": "0010011110",
              "expected": "11111"
            },
            {
              "inputs": "1010011110",
              "expected": "10001"
            },
            {
              "inputs": "0110011110",
              "expected": "00001"
            },
            {
              "inputs": "1110011110",
              "expected": "01101"
            },
            {
              "inputs": "0001011110",
              "expected": "11111"
            },
            {
              "inputs": "1001011110",
              "expected": "01001"
            },
            {
              "inputs": "0101011110",
              "expected": "10001"
            },
            {
              "inputs": "1101011110",
              "expected": "10101"
            },
            {
              "inputs": "0011011110",
              "expected": "11111"
            },
            {
              "inputs": "1011011110",
              "expected": "11001"
            },
            {
              "inputs": "0111011110",
              "expected": "01001"
            },
            {
              "inputs": "1111011110",
              "expected": "00101"
            },
            {
              "inputs": "0000000010",
              "expected": "00100"
            },
            {
              "inputs": "1000000010",
              "expected": "00000"
            },
            {
              "inputs": "0100000010",
              "expected": "00100"
            },
            {
              "inputs": "1100000010",
              "expected": "00100"
            },
            {
              "inputs": "0010000010",
              "expected": "10100"
            },
            {
              "inputs": "1010000010",
              "expected": "00000"
            },
            {
              "inputs": "0110000010",
              "expected": "10100"
            },
            {
              "inputs": "1110000010",
              "expected": "11000"
            },
            {
              "inputs": "0001000010",
              "expected": "01100"
            },
            {
              "inputs": "1001000010",
              "expected": "00000"
            },
            {
              "inputs": "0101000010",
              "expected": "01100"
            },
            {
              "inputs": "1101000010",
              "expected": "01000"
            },
            {
              "inputs": "0011000010",
              "expected": "11100"
            },
            {
              "inputs": "1011000010",
              "expected": "00000"
            },
            {
              "inputs": "0111000010",
              "expected": "11100"
            },
            {
              "inputs": "1111000010",
              "expected": "10000"
            },
            {
              "inputs": "0000010010",
              "expected": "00100"
            },
            {
              "inputs": "1000010010",
              "expected": "00100"
            },
            {
              "inputs": "0100010010",
              "expected": "00010"
            },
            {
              "inputs": "1100010010",
              "expected": "00000"
            },
            {
              "inputs": "0010010010",
              "expected": "10100"
            },
            {
              "inputs": "1010010010",
              "expected": "00101"
            },
            {
              "inputs": "0110010010",
              "expected": "10010"
            },
            {
              "inputs": "1110010010",
              "expected": "11111"
            },
            {
              "inputs": "0001010010",
              "expected": "01100"
            },
            {
              "inputs": "1001010010",
              "expected": "00101"
            },
            {
              "inputs": "0101010010",
              "expected": "01010"
            },
            {
              "inputs": "1101010010",
              "expected": "01111"
            },
            {
              "inputs": "0011010010",
              "expected": "11100"
            },
            {
              "inputs": "1011010010",
              "expected": "00101"
            },
            {
              "inputs": "0111010010",
              "expected": "11010"
            },
            {
              "inputs": "1111010010",
              "expected": "10111"
            },
            {
              "inputs": "0000001010",
              "expected": "00110"
            },
            {
              "inputs": "1000001010",
              "expected": "00001"
            },
            {
              "inputs": "0100001010",
              "expected": "00110"
            },
            {
              "inputs": "1100001010",
              "expected": "00111"
            },
            {
              "inputs": "0010001010",
              "expected": "10110"
            },
            {
              "inputs": "1010001010",
              "expected": "00001"
            },
            {
              "inputs": "0110001010",
              "expected": "10110"
            },
            {
              "inputs": "1110001010",
              "expected": "11011"
            },
            {
              "inputs": "0001001010",
              "expected": "01110"
            },
            {
              "inputs": "1001001010",
              "expected": "00001"
            },
            {
              "inputs": "0101001010",
              "expected": "01110"
            },
            {
              "inputs": "1101001010",
              "expected": "01011"
            },
            {
              "inputs": "0011001010",
              "expected": "11110"
            },
            {
              "inputs": "1011001010",
              "expected": "00001"
            },
            {
              "inputs": "0111001010",
              "expected": "11110"
            },
            {
              "inputs": "1111001010",
              "expected": "10011"
            },
            {
              "inputs": "0000011010",
              "expected": "00111"
            },
            {
              "inputs": "1000011010",
              "expected": "00101"
            },
            {
              "inputs": "0100011010",
              "expected": "00001"
            },
            {
              "inputs": "1100011010",
              "expected": "00011"
            },
            {
              "inputs": "0010011010",
              "expected": "10111"
            },
            {
              "inputs": "1010011010",
              "expected": "00101"
            },
            {
              "inputs": "0110011010",
              "expected": "10001"
            },
            {
              "inputs": "1110011010",
              "expected": "11101"
            },
            {
              "inputs": "0001011010",
              "expected": "01111"
            },
            {
              "inputs": "1001011010",
              "expected": "00101"
            },
            {
              "inputs": "0101011010",
              "expected": "01001"
            },
            {
              "inputs": "1101011010",
              "expected": "01101"
            },
            {
              "inputs": "0011011010",
              "expected": "11111"
            },
            {
              "inputs": "1011011010",
              "expected": "00101"
            },
            {
              "inputs": "0111011010",
              "expected": "11001"
            },
            {
              "inputs": "1111011010",
              "expected": "10101"
            },
            {
              "inputs": "0000001010",
              "expected": "10100"
            },
            {
              "inputs": "1000000101",
              "expected": "00000"
            },
            {
              "inputs": "0100000101",
              "expected": "10100"
            },
            {
              "inputs": "1100000101",
              "expected": "10100"
            },
            {
              "inputs": "0010000101",
              "expected": "10100"
            },
            {
              "inputs": "1010000101",
              "expected": "10000"
            },
            {
              "inputs": "0110000101",
              "expected": "01100"
            },
            {
              "inputs": "1110000101",
              "expected": "00100"
            },
            {
              "inputs": "0001000101",
              "expected": "11100"
            },
            {
              "inputs": "0101001001",
              "expected": "00000"
            },
            {
              "inputs": "0101001010",
              "expected": "00111"
            },
            {
              "inputs": "0101001011",
              "expected": "00011"
            },
            {
              "inputs": "0101001100",
              "expected": "00111"
            },
            {
              "inputs": "0101001101",
              "expected": "00001"
            },
            {
              "inputs": "0101001110",
              "expected": "01000"
            },
            {
              "inputs": "0101001111",
              "expected": "00010"
            },
            {
              "inputs": "0101010000",
              "expected": "00101"
            },
            {
              "inputs": "0101010001",
              "expected": "00100"
            },
            {
              "inputs": "0101010010",
              "expected": "01001"
            },
            {
              "inputs": "0101010011",
              "expected": "00001"
            },
            {
              "inputs": "0101010100",
              "expected": "00101"
            },
            {
              "inputs": "0101010101",
              "expected": "00101"
            },
            {
              "inputs": "0101010110",
              "expected": "01010"
            },
            {
              "inputs": "0101010111",
              "expected": "00000"
            },
            {
              "inputs": "0101011000",
              "expected": "00111"
            },
            {
              "inputs": "0101011001",
              "expected": "10100"
            },
            {
              "inputs": "0101011010",
              "expected": "01011"
            },
            {
              "inputs": "0101011011",
              "expected": "11111"
            },
            {
              "inputs": "0101011100",
              "expected": "00111"
            },
            {
              "inputs": "0101011101",
              "expected": "10101"
            },
            {
              "inputs": "0101011110",
              "expected": "01100"
            },
            {
              "inputs": "0101011111",
              "expected": "11110"
            },
            {
              "inputs": "0101100000",
              "expected": "01101"
            },
            {
              "inputs": "0101100001",
              "expected": "10000"
            },
            {
              "inputs": "0101100010",
              "expected": "01101"
            },
            {
              "inputs": "0101100011",
              "expected": "11101"
            },
            {
              "inputs": "0101100100",
              "expected": "01101"
            },
            {
              "inputs": "0101100101",
              "expected": "10001"
            },
            {
              "inputs": "0101100110",
              "expected": "01110"
            },
            {
              "inputs": "0101100111",
              "expected": "11100"
            },
            {
              "inputs": "0101101000",
              "expected": "01111"
            },
            {
              "inputs": "0101101001",
              "expected": "10000"
            },
            {
              "inputs": "0101101010",
              "expected": "01111"
            },
            {
              "inputs": "0101101011",
              "expected": "11011"
            },
            {
              "inputs": "0101101100",
              "expected": "11111"
            },
            {
              "inputs": "0101101101",
              "expected": "10001"
            },
            {
              "inputs": "0101101110",
              "expected": "10000"
            },
            {
              "inputs": "1111011010",
              "expected": "01011"
            },
            {
              "inputs": "0000111010",
              "expected": "10111"
            },
            {
              "inputs": "1000111010",
              "expected": "00101"
            },
            {
              "inputs": "0100111010",
              "expected": "10001"
            },
            {
              "inputs": "1100111010",
              "expected": "10011"
            },
            {
              "inputs": "0010111010",
              "expected": "10111"
            },
            {
              "inputs": "1010111010",
              "expected": "10101"
            },
            {
              "inputs": "0101110110",
              "expected": "10010"
            },
            {
              "inputs": "0101110111",
              "expected": "11000"
            },
            {
              "inputs": "0101111000",
              "expected": "11111"
            },
            {
              "inputs": "0101111001",
              "expected": "10100"
            },
            {
              "inputs": "0101111010",
              "expected": "10011"
            },
            {
              "inputs": "0101111011",
              "expected": "10111"
            },
            {
              "inputs": "0101111100",
              "expected": "11111"
            },
            {
              "inputs": "0101111101",
              "expected": "10101"
            },
            {
              "inputs": "0101111110",
              "expected": "10100"
            },
            {
              "inputs": "0101111111",
              "expected": "10110"
            },
            {
              "inputs": "0110000000",
              "expected": "00110"
            },
            {
              "inputs": "0110000001",
              "expected": "00000"
            },
            {
              "inputs": "0110000010",
              "expected": "00110"
            },
            {
              "inputs": "0110000011",
              "expected": "00110"
            },
            {
              "inputs": "0110000100",
              "expected": "00111"
            },
            {
              "inputs": "0110000101",
              "expected": "00000"
            },
            {
              "inputs": "0110000110",
              "expected": "00111"
            },
            {
              "inputs": "0110000111",
              "expected": "00101"
            },
            {
              "inputs": "0110001000",
              "expected": "00110"
            },
            {
              "inputs": "0110001001",
              "expected": "00010"
            },
            {
              "inputs": "0110001010",
              "expected": "01000"
            },
            {
              "inputs": "0110001011",
              "expected": "00100"
            },
            {
              "inputs": "0110001100",
              "expected": "00111"
            },
            {
              "inputs": "0110111010",
              "expected": "10100"
            },
            {
              "inputs": "0110111011",
              "expected": "11000"
            },
            {
              "inputs": "0110111100",
              "expected": "11111"
            },
            {
              "inputs": "0110111101",
              "expected": "10110"
            },
            {
              "inputs": "0110111110",
              "expected": "10101"
            },
            {
              "inputs": "0110111111",
              "expected": "10111"
            },
            {
              "inputs": "0111000000",
              "expected": "00111"
            },
            {
              "inputs": "0111000001",
              "expected": "00000"
            },
            {
              "inputs": "0111000010",
              "expected": "00111"
            },
            {
              "inputs": "0111000011",
              "expected": "00111"
            },
            {
              "inputs": "0111000100",
              "expected": "00111"
            },
            {
              "inputs": "0111000101",
              "expected": "00001"
            },
            {
              "inputs": "0111000110",
              "expected": "01000"
            },
            {
              "inputs": "0111000111",
              "expected": "00110"
            },
            {
              "inputs": "0111001000",
              "expected": "00111"
            },
            {
              "inputs": "0111001001",
              "expected": "00010"
            },
            {
              "inputs": "0111001010",
              "expected": "01001"
            },
            {
              "inputs": "0111001011",
              "expected": "00101"
            },
            {
              "inputs": "0111001100",
              "expected": "00111"
            },
            {
              "inputs": "0111001101",
              "expected": "00011"
            },
            {
              "inputs": "0111001110",
              "expected": "01010"
            },
            {
              "inputs": "0111001111",
              "expected": "00100"
            },
            {
              "inputs": "0111010000",
              "expected": "00111"
            },
            {
              "inputs": "0111010001",
              "expected": "00100"
            },
            {
              "inputs": "0111010010",
              "expected": "01011"
            },
            {
              "inputs": "0111010011",
              "expected": "00011"
            },
            {
              "inputs": "0111010100",
              "expected": "00111"
            },
            {
              "inputs": "0111010101",
              "expected": "00101"
            },
            {
              "inputs": "0111010110",
              "expected": "01100"
            },
            {
              "inputs": "0111010111",
              "expected": "00010"
            },
            {
              "inputs": "0111011000",
              "expected": "00111"
            },
            {
              "inputs": "0111011001",
              "expected": "00110"
            },
            {
              "inputs": "0111011010",
              "expected": "01101"
            },
            {
              "inputs": "0111011011",
              "expected": "00001"
            },
            {
              "inputs": "0111011100",
              "expected": "00111"
            },
            {
              "inputs": "0111011101",
              "expected": "00111"
            },
            {
              "inputs": "0111011110",
              "expected": "01110"
            },
            {
              "inputs": "0111011111",
              "expected": "00000"
            },
            {
              "inputs": "0111100000",
              "expected": "01111"
            },
            {
              "inputs": "1001100010",
              "expected": "10001"
            },
            {
              "inputs": "1001100011",
              "expected": "00001"
            },
            {
              "inputs": "1001100100",
              "expected": "11001"
            },
            {
              "inputs": "1001100101",
              "expected": "01001"
            },
            {
              "inputs": "1001100110",
              "expected": "10010"
            },
            {
              "inputs": "1001100111",
              "expected": "00000"
            },
            {
              "inputs": "1001101000",
              "expected": "11011"
            },
            {
              "inputs": "1001101001",
              "expected": "11000"
            },
            {
              "inputs": "1001101010",
              "expected": "10011"
            },
            {
              "inputs": "1001101011",
              "expected": "11111"
            },
            {
              "inputs": "1001101100",
              "expected": "11011"
            },
            {
              "inputs": "1001101101",
              "expected": "11001"
            },
            {
              "inputs": "1111111010",
              "expected": "11101"
            },
            {
              "inputs": "1111111111",
              "expected": "00000"
            }
          ],
          "hints": [
            "Op=00: A AND B",
            "Op=01: A OR B",
            "Op=10: A + B",
            "Op=11: A - B",
            "Use 4-to-1 MUX to select operation"
          ]
        },
        {
          "id": "lvl.counter4bit.1",
          "chapterId": "ch.sequential",
          "name": "4-bit Counter",
          "description": "Count from 0 to 15 and repeat. Use clock input.",
          "inputCount": 1,
          "outputCount": 4,
          "inputBitCounts": [
            1
          ],
          "outputBitCounts": [
            1,
            1,
            1,
            1
          ],
          "inputPinLabels": [
            {
              "name": "Clock",
              "abbr": "C"
            }
          ],
          "outputPinLabels": [
            {
              "name": "Count Bit 3",
              "abbr": "3"
            },
            {
              "name": "Count Bit 2",
              "abbr": "2"
            },
            {
              "name": "Count Bit 1",
              "abbr": "1"
            },
            {
              "name": "Count Bit 0",
              "abbr": "0"
            }
          ],
          "isSequential": true,
          "clockInputIndex": 0,
          "settleStepsPerVector": 3,
          "testSequences": [
            {
              "name": "Reset and Count",
              "vectors": [
                {
                  "inputs": "0",
                  "expected": "0000",
                  "settleSteps": 1,
                  "isClockEdge": false
                },
                {
                  "inputs": "1",
                  "expected": "0001",
                  "settleSteps": 2,
                  "isClockEdge": true
                },
                {
                  "inputs": "0",
                  "expected": "0001",
                  "settleSteps": 1,
                  "isClockEdge": false
                },
                {
                  "inputs": "1",
                  "expected": "0010",
                  "settleSteps": 2,
                  "isClockEdge": true
                },
                {
                  "inputs": "0",
                  "expected": "0010",
                  "settleSteps": 1,
                  "isClockEdge": false
                },
                {
                  "inputs": "1",
                  "expected": "0011",
                  "settleSteps": 2,
                  "isClockEdge": true
                },
                {
                  "inputs": "0",
                  "expected": "0011",
                  "settleSteps": 1,
                  "isClockEdge": false
                },
                {
                  "inputs": "1",
                  "expected": "0100",
                  "settleSteps": 2,
                  "isClockEdge": true
                },
                {
                  "inputs": "0",
                  "expected": "0100",
                  "settleSteps": 1,
                  "isClockEdge": false
                },
                {
                  "inputs": "1",
                  "expected": "0101",
                  "settleSteps": 2,
                  "isClockEdge": true
                },
                {
                  "inputs": "0",
                  "expected": "0101",
                  "settleSteps": 1,
                  "isClockEdge": false
                },
                {
                  "inputs": "1",
                  "expected": "0110",
                  "settleSteps": 2,
                  "isClockEdge": true
                },
                {
                  "inputs": "0",
                  "expected": "0110",
                  "settleSteps": 1,
                  "isClockEdge": false
                },
                {
                  "inputs": "1",
                  "expected": "0111",
                  "settleSteps": 2,
                  "isClockEdge": true
                },
                {
                  "inputs": "0",
                  "expected": "0111",
                  "settleSteps": 1,
                  "isClockEdge": false
                },
                {
                  "inputs": "1",
                  "expected": "1000",
                  "settleSteps": 2,
                  "isClockEdge": true
                },
                {
                  "inputs": "0",
                  "expected": "1000",
                  "settleSteps": 1,
                  "isClockEdge": false
                },
                {
                  "inputs": "1",
                  "expected": "1001",
                  "settleSteps": 2,
                  "isClockEdge": true
                },
                {
                  "inputs": "0",
                  "expected": "1001",
                  "settleSteps": 1,
                  "isClockEdge": false
                },
                {
                  "inputs": "1",
                  "expected": "1010",
                  "settleSteps": 2,
                  "isClockEdge": true
                },
                {
                  "inputs": "0",
                  "expected": "1010",
                  "settleSteps": 1,
                  "isClockEdge": false
                },
                {
                  "inputs": "1",
                  "expected": "1011",
                  "settleSteps": 2,
                  "isClockEdge": true
                },
                {
                  "inputs": "0",
                  "expected": "1011",
                  "settleSteps": 1,
                  "isClockEdge": false
                },
                {
                  "inputs": "1",
                  "expected": "1100",
                  "settleSteps": 2,
                  "isClockEdge": true
                },
                {
                  "inputs": "0",
                  "expected": "1100",
                  "settleSteps": 1,
                  "isClockEdge": false
                },
                {
                  "inputs": "1",
                  "expected": "1101",
                  "settleSteps": 2,
                  "isClockEdge": true
                },
                {
                  "inputs": "0",
                  "expected": "1101",
                  "settleSteps": 1,
                  "isClockEdge": false
                },
                {
                  "inputs": "1",
                  "expected": "1110",
                  "settleSteps": 2,
                  "isClockEdge": true
                },
                {
                  "inputs": "0",
                  "expected": "1110",
                  "settleSteps": 1,
                  "isClockEdge": false
                },
                {
                  "inputs": "1",
                  "expected": "1111",
                  "settleSteps": 2,
                  "isClockEdge": true
                },
                {
                  "inputs": "0",
                  "expected": "1111",
                  "settleSteps": 1,
                  "isClockEdge": false
                },
                {
                  "inputs": "1",
                  "expected": "0000",
                  "settleSteps": 2,
                  "isClockEdge": true
                }
              ]
            }
          ],
          "hints": [
            "Use D flip-flops for each bit",
            "Q0 toggles every clock",
            "Q1 toggles when Q0=1",
            "Q2 toggles when Q0=1 and Q1=1",
            "Q3 toggles when Q0=1, Q1=1, and Q2=1"
          ]
        }
      ]
    },
    {
      "chapterId": "ch.8bit",
      "chapterName": "8-Bit Operations",
      "chapterDescription": "Bridge the gap between simple logic gates and real-world computing! Learn to work with 8-bit data buses - the fundamental unit of computer memory. Master parallel processing, understand carry propagation across bytes, and build circuits that manipulate data the way real processors do. From simple operations to a complete 8-bit ALU, you'll discover how computers process information at the byte level.",
      "levels": [
        {
          "id": "lvl.8bit.wire.1",
          "chapterId": "ch.8bit",
          "name": "8-Bit Wire",
          "description": "Connect the 8-bit input directly to the 8-bit output. This introduces the concept of multi-bit buses - bundles of wires that carry parallel data signals. Think of it as moving an entire byte of information at once!",
          "inputCount": 1,
          "outputCount": 1,
          "inputBitCounts": [
            8
          ],
          "outputBitCounts": [
            8
          ],
          "inputPinLabels": [
            {
              "name": "Data",
              "abbr": "A"
            }
          ],
          "outputPinLabels": [
            {
              "name": "Output",
              "abbr": "OUT"
            }
          ],
          "testVectors": [
            {
              "inputs": "00000000",
              "expected": "00000000"
            },
            {
              "inputs": "00000001",
              "expected": "00000001"
            },
            {
              "inputs": "00000010",
              "expected": "00000010"
            },
            {
              "inputs": "00000100",
              "expected": "00000100"
            },
            {
              "inputs": "00001000",
              "expected": "00001000"
            },
            {
              "inputs": "00010000",
              "expected": "00010000"
            },
            {
              "inputs": "00100000",
              "expected": "00100000"
            },
            {
              "inputs": "01000000",
              "expected": "01000000"
            },
            {
              "inputs": "10000000",
              "expected": "10000000"
            },
            {
              "inputs": "11111111",
              "expected": "11111111"
            },
            {
              "inputs": "10101010",
              "expected": "10101010"
            },
            {
              "inputs": "01010101",
              "expected": "01010101"
            },
            {
              "inputs": "11110000",
              "expected": "11110000"
            },
            {
              "inputs": "00001111",
              "expected": "00001111"
            },
            {
              "inputs": "10011001",
              "expected": "10011001"
            },
            {
              "inputs": "01100110",
              "expected": "01100110"
            },
            {
              "inputs": "11001100",
              "expected": "11001100"
            },
            {
              "inputs": "00110011",
              "expected": "00110011"
            },
            {
              "inputs": "11100111",
              "expected": "11100111"
            },
            {
              "inputs": "00011000",
              "expected": "00011000"
            }
          ],
          "hints": [
            "Connect A0 to OUT0, A1 to OUT1, and so on...",
            "This is the simplest 8-bit operation - just passing data through"
          ]
        },
        {
          "id": "lvl.8bit.mux.1",
          "chapterId": "ch.8bit",
          "name": "8-Bit 2-to-1 Multiplexer",
          "description": "Build an 8-bit 2-to-1 multiplexer. When SEL=0, output A; when SEL=1, output B. This circuit selects between two 8-bit data sources based on a single control signal.",
          "inputCount": 3,
          "outputCount": 1,
          "inputBitCounts": [
            1,
            8,
            8
          ],
          "outputBitCounts": [
            8
          ],
          "inputPinLabels": [
            {
              "name": "Select",
              "abbr": "SEL"
            },
            {
              "name": "Data A",
              "abbr": "A"
            },
            {
              "name": "Data B",
              "abbr": "B"
            }
          ],
          "outputPinLabels": [
            {
              "name": "Output",
              "abbr": "OUT"
            }
          ],
          "testVectors": [
            {
              "inputs": "00101111001000011",
              "expected": "00100001"
            },
            {
              "inputs": "10011110100000100",
              "expected": "10011110"
            },
            {
              "inputs": "10101001010000000",
              "expected": "10101001"
            },
            {
              "inputs": "10000000110100111",
              "expected": "11010011"
            },
            {
              "inputs": "01001110001001111",
              "expected": "00100111"
            },
            {
              "inputs": "00101101111100101",
              "expected": "11110010"
            },
            {
              "inputs": "01011110111101110",
              "expected": "01011110"
            },
            {
              "inputs": "11101011110111101",
              "expected": "11011110"
            },
            {
              "inputs": "11110011010000010",
              "expected": "11110011"
            },
            {
              "inputs": "11000100101110111",
              "expected": "10111011"
            },
            {
              "inputs": "10010000001100001",
              "expected": "00110000"
            },
            {
              "inputs": "00000110011100001",
              "expected": "01110000"
            },
            {
              "inputs": "11111010010101000",
              "expected": "11111010"
            },
            {
              "inputs": "10001101101100101",
              "expected": "10110010"
            },
            {
              "inputs": "10000100010110001",
              "expected": "01011000"
            },
            {
              "inputs": "11000010111101001",
              "expected": "11110100"
            },
            {
              "inputs": "00001000101000100",
              "expected": "00001000"
            },
            {
              "inputs": "11011010101110110",
              "expected": "11011010"
            },
            {
              "inputs": "01010001001100100",
              "expected": "01010001"
            },
            {
              "inputs": "10110000100000111",
              "expected": "10000011"
            },
            {
              "inputs": "10001011111001011",
              "expected": "11100101"
            },
            {
              "inputs": "10011010111000110",
              "expected": "10011010"
            },
            {
              "inputs": "00010100101101001",
              "expected": "10110100"
            },
            {
              "inputs": "11100100100101011",
              "expected": "10010101"
            },
            {
              "inputs": "11010101000001110",
              "expected": "11010101"
            },
            {
              "inputs": "10100110110000110",
              "expected": "10100110"
            },
            {
              "inputs": "10000000110001011",
              "expected": "11000101"
            },
            {
              "inputs": "11000100111100100",
              "expected": "11000100"
            },
            {
              "inputs": "11010011101001011",
              "expected": "10100101"
            },
            {
              "inputs": "11001011010110100",
              "expected": "11001011"
            },
            {
              "inputs": "10111101101101011",
              "expected": "10110101"
            },
            {
              "inputs": "10110101011110000",
              "expected": "10110101"
            },
            {
              "inputs": "10011100010111011",
              "expected": "01011101"
            },
            {
              "inputs": "11110100101010000",
              "expected": "11110100"
            },
            {
              "inputs": "00010001001010000",
              "expected": "00010001"
            },
            {
              "inputs": "11001101111010111",
              "expected": "11101011"
            },
            {
              "inputs": "11001010000100001",
              "expected": "00010000"
            },
            {
              "inputs": "01000000011101011",
              "expected": "01110101"
            },
            {
              "inputs": "10101011101011000",
              "expected": "10101011"
            },
            {
              "inputs": "10111101110110101",
              "expected": "11011010"
            },
            {
              "inputs": "00110000111101110",
              "expected": "00110000"
            },
            {
              "inputs": "11001100011110010",
              "expected": "11001100"
            },
            {
              "inputs": "01010010101000100",
              "expected": "01010010"
            },
            {
              "inputs": "00001110110101110",
              "expected": "00001110"
            },
            {
              "inputs": "01111101100111000",
              "expected": "01111101"
            },
            {
              "inputs": "01011101000111010",
              "expected": "01011101"
            },
            {
              "inputs": "10100000110000001",
              "expected": "11000000"
            },
            {
              "inputs": "01100010100001100",
              "expected": "01100010"
            },
            {
              "inputs": "00111011010000110",
              "expected": "00111011"
            },
            {
              "inputs": "01010101011000111",
              "expected": "01100011"
            },
            {
              "inputs": "00101100011001011",
              "expected": "01100101"
            },
            {
              "inputs": "10110011010010010",
              "expected": "10110011"
            },
            {
              "inputs": "00011100011110101",
              "expected": "01111010"
            },
            {
              "inputs": "11000110000001010",
              "expected": "11000110"
            },
            {
              "inputs": "00111011110010100",
              "expected": "00111011"
            },
            {
              "inputs": "11011001011011110",
              "expected": "11011001"
            },
            {
              "inputs": "01011100011010011",
              "expected": "01101001"
            },
            {
              "inputs": "10001100010001101",
              "expected": "01000110"
            },
            {
              "inputs": "01010000001011111",
              "expected": "00101111"
            },
            {
              "inputs": "10101000001100001",
              "expected": "00110000"
            },
            {
              "inputs": "00011010110000010",
              "expected": "00011010"
            },
            {
              "inputs": "00111111000000000",
              "expected": "00111111"
            },
            {
              "inputs": "01010010000110110",
              "expected": "01010010"
            },
            {
              "inputs": "10100001100001110",
              "expected": "10100001"
            },
            {
              "inputs": "01001011001100001",
              "expected": "00110000"
            },
            {
              "inputs": "01011111100000010",
              "expected": "01011111"
            },
            {
              "inputs": "01101111101000011",
              "expected": "10100001"
            },
            {
              "inputs": "00011011100010011",
              "expected": "10001001"
            },
            {
              "inputs": "01110000111000010",
              "expected": "01110000"
            },
            {
              "inputs": "01001110011011001",
              "expected": "01101100"
            },
            {
              "inputs": "11101100000100011",
              "expected": "00010001"
            },
            {
              "inputs": "11010111000011011",
              "expected": "00001101"
            },
            {
              "inputs": "10001110111001010",
              "expected": "10001110"
            },
            {
              "inputs": "01110010101001101",
              "expected": "10100110"
            },
            {
              "inputs": "10000100010111001",
              "expected": "01011100"
            },
            {
              "inputs": "11011111100001000",
              "expected": "11011111"
            },
            {
              "inputs": "11110010110100110",
              "expected": "11110010"
            },
            {
              "inputs": "00100001010110001",
              "expected": "01011000"
            },
            {
              "inputs": "10100100111000101",
              "expected": "11100010"
            },
            {
              "inputs": "01100001110001000",
              "expected": "01100001"
            },
            {
              "inputs": "11011001111111000",
              "expected": "11011001"
            },
            {
              "inputs": "11101010001100101",
              "expected": "00110010"
            },
            {
              "inputs": "10110110000101001",
              "expected": "00010100"
            },
            {
              "inputs": "10001011100010111",
              "expected": "10001011"
            },
            {
              "inputs": "01001011100101010",
              "expected": "01001011"
            },
            {
              "inputs": "01011110111001100",
              "expected": "01011110"
            },
            {
              "inputs": "00111101110110010",
              "expected": "00111101"
            },
            {
              "inputs": "00110110111100110",
              "expected": "00110110"
            },
            {
              "inputs": "11010000011011101",
              "expected": "01101110"
            },
            {
              "inputs": "10110111010010010",
              "expected": "10110111"
            },
            {
              "inputs": "01011110110110111",
              "expected": "11011011"
            },
            {
              "inputs": "00011001110000111",
              "expected": "11000011"
            },
            {
              "inputs": "11001010100011111",
              "expected": "10001111"
            },
            {
              "inputs": "01010001100110100",
              "expected": "01010001"
            },
            {
              "inputs": "10010001100101011",
              "expected": "10010101"
            },
            {
              "inputs": "01010101100111111",
              "expected": "10011111"
            },
            {
              "inputs": "11111101011010001",
              "expected": "01101000"
            },
            {
              "inputs": "01100001101010101",
              "expected": "10101010"
            },
            {
              "inputs": "00010011110110000",
              "expected": "00010011"
            },
            {
              "inputs": "11011000101101000",
              "expected": "11011000"
            }
          ]
        },
        {
          "id": "lvl.8bit.adder.1",
          "chapterId": "ch.8bit",
          "name": "8-Bit Adder",
          "description": "Add two 8-bit numbers with carry-in and carry-out. This is real binary arithmetic! The carry ripples through all 8 bits, just like carrying in decimal addition. Hint: You can chain two 4-bit adders together!",
          "inputCount": 3,
          "outputCount": 2,
          "inputBitCounts": [
            1,
            8,
            8
          ],
          "outputBitCounts": [
            8,
            1
          ],
          "inputPinLabels": [
            {
              "name": "Carry In",
              "abbr": "C"
            },
            {
              "name": "Data A",
              "abbr": "A"
            },
            {
              "name": "Data B",
              "abbr": "B"
            }
          ],
          "outputPinLabels": [
            {
              "name": "Sum",
              "abbr": "SUM"
            },
            {
              "name": "Carry Out",
              "abbr": "C"
            }
          ],
          "testVectors": [
            {
              "inputs": "00000000000000000",
              "expected": "000000000"
            },
            {
              "inputs": "00000000000000001",
              "expected": "000000001"
            },
            {
              "inputs": "00000000100000001",
              "expected": "000000010"
            },
            {
              "inputs": "00000000100000000",
              "expected": "000000001"
            },
            {
              "inputs": "01111111111111111",
              "expected": "111111110"
            },
            {
              "inputs": "11111111111111111",
              "expected": "111111111"
            },
            {
              "inputs": "00000001000000001",
              "expected": "000000010"
            },
            {
              "inputs": "00000010000000010",
              "expected": "000000100"
            },
            {
              "inputs": "01000000001000000",
              "expected": "010000000"
            },
            {
              "inputs": "10000000010000000",
              "expected": "100000000"
            },
            {
              "inputs": "01111111101111111",
              "expected": "111111110"
            },
            {
              "inputs": "11111111101111111",
              "expected": "111111111"
            },
            {
              "inputs": "01111111100000000",
              "expected": "011111111"
            },
            {
              "inputs": "00000000011111111",
              "expected": "011111111"
            },
            {
              "inputs": "01010101001010101",
              "expected": "010101010"
            },
            {
              "inputs": "00101010100101010",
              "expected": "001010101"
            },
            {
              "inputs": "01111000001111000",
              "expected": "011110000"
            },
            {
              "inputs": "00000111100000111",
              "expected": "000001111"
            },
            {
              "inputs": "01100110001100110",
              "expected": "011001100"
            },
            {
              "inputs": "00011001100011001",
              "expected": "000110011"
            },
            {
              "inputs": "01111111100000001",
              "expected": "100000000"
            },
            {
              "inputs": "10000000010000000",
              "expected": "100000001"
            },
            {
              "inputs": "01111111101111111",
              "expected": "111111110"
            },
            {
              "inputs": "10101010101010101",
              "expected": "101010101"
            },
            {
              "inputs": "11010101001010101",
              "expected": "110101010"
            },
            {
              "inputs": "01000000010000000",
              "expected": "010000001"
            },
            {
              "inputs": "00100000000100000",
              "expected": "000100001"
            },
            {
              "inputs": "00010000000010000",
              "expected": "000010001"
            },
            {
              "inputs": "00001000000001000",
              "expected": "000001001"
            },
            {
              "inputs": "00000100000000100",
              "expected": "000000101"
            }
          ],
          "hints": [
            "Chain two 4-bit adders together",
            "Connect carry-out of lower 4 bits to carry-in of upper 4 bits",
            "Or build from 8 full adders with carries rippling through"
          ]
        },
        {
          "id": "lvl.8bit.equality.1",
          "chapterId": "ch.8bit",
          "name": "8-Bit Equality Comparator",
          "description": "Compare two 8-bit numbers for equality. Output 1 if A equals B, 0 otherwise. All 8 bits must match! This is how computers check if two values are the same.",
          "inputCount": 2,
          "outputCount": 1,
          "inputBitCounts": [
            8,
            8
          ],
          "outputBitCounts": [
            1
          ],
          "inputPinLabels": [
            {
              "name": "Data A",
              "abbr": "A"
            },
            {
              "name": "Data B",
              "abbr": "B"
            }
          ],
          "outputPinLabels": [
            {
              "name": "Equal",
              "abbr": "EQ"
            }
          ],
          "testVectors": [
            {
              "inputs": "0000000000000000",
              "expected": "1"
            },
            {
              "inputs": "1111111111111111",
              "expected": "1"
            },
            {
              "inputs": "1010101010101010",
              "expected": "1"
            },
            {
              "inputs": "0101010101010101",
              "expected": "1"
            },
            {
              "inputs": "1111000011110000",
              "expected": "1"
            },
            {
              "inputs": "0000111100001111",
              "expected": "1"
            },
            {
              "inputs": "1100110011001100",
              "expected": "1"
            },
            {
              "inputs": "0011001100110011",
              "expected": "1"
            },
            {
              "inputs": "1111111100000000",
              "expected": "0"
            },
            {
              "inputs": "0000000011111111",
              "expected": "0"
            },
            {
              "inputs": "1111111100000001",
              "expected": "0"
            },
            {
              "inputs": "0000000100000000",
              "expected": "0"
            },
            {
              "inputs": "1000000000000000",
              "expected": "0"
            },
            {
              "inputs": "0000000010000000",
              "expected": "0"
            },
            {
              "inputs": "1010101001010101",
              "expected": "0"
            },
            {
              "inputs": "0101010110101010",
              "expected": "0"
            },
            {
              "inputs": "1111111011111111",
              "expected": "0"
            },
            {
              "inputs": "1111111111111110",
              "expected": "0"
            },
            {
              "inputs": "0000000100000000",
              "expected": "0"
            },
            {
              "inputs": "1111111111111101",
              "expected": "0"
            }
          ],
          "hints": [
            "A equals B when all bits match",
            "Use XNOR for each bit pair, then AND all results together",
            "Or: XOR each bit pair, OR all results, then NOT the final output"
          ]
        },
        {
          "id": "lvl.8bit.greater.1",
          "chapterId": "ch.8bit",
          "name": "8-Bit Greater Than",
          "description": "Compare two 8-bit unsigned numbers. Output 1 if A > B, 0 otherwise. Start comparing from the most significant bit (MSB) - just like comparing decimal numbers from left to right!",
          "inputCount": 2,
          "outputCount": 1,
          "inputBitCounts": [
            8,
            8
          ],
          "outputBitCounts": [
            1
          ],
          "inputPinLabels": [
            {
              "name": "Data A",
              "abbr": "A"
            },
            {
              "name": "Data B",
              "abbr": "B"
            }
          ],
          "outputPinLabels": [
            {
              "name": "Greater",
              "abbr": "GT"
            }
          ],
          "testVectors": [
            {
              "inputs": "0000000000000000",
              "expected": "0"
            },
            {
              "inputs": "0000000000000001",
              "expected": "1"
            },
            {
              "inputs": "0000000100000000",
              "expected": "0"
            },
            {
              "inputs": "0000000100000010",
              "expected": "1"
            },
            {
              "inputs": "1111111111111111",
              "expected": "0"
            },
            {
              "inputs": "1111111011111111",
              "expected": "0"
            },
            {
              "inputs": "0111111111111111",
              "expected": "1"
            },
            {
              "inputs": "1000000001111111",
              "expected": "1"
            },
            {
              "inputs": "1000000010000000",
              "expected": "0"
            },
            {
              "inputs": "1000000010000001",
              "expected": "1"
            },
            {
              "inputs": "0000000100000001",
              "expected": "0"
            },
            {
              "inputs": "0000001000000001",
              "expected": "0"
            },
            {
              "inputs": "0000001000000100",
              "expected": "1"
            },
            {
              "inputs": "1010101001010101",
              "expected": "1"
            },
            {
              "inputs": "0101010110101010",
              "expected": "0"
            },
            {
              "inputs": "1111000000001111",
              "expected": "1"
            },
            {
              "inputs": "0000111111110000",
              "expected": "0"
            },
            {
              "inputs": "1111111100000000",
              "expected": "1"
            },
            {
              "inputs": "0000000011111111",
              "expected": "0"
            },
            {
              "inputs": "1000000000000001",
              "expected": "1"
            },
            {
              "inputs": "0111111111111110",
              "expected": "0"
            },
            {
              "inputs": "1100110011001100",
              "expected": "0"
            },
            {
              "inputs": "1100110011001101",
              "expected": "1"
            },
            {
              "inputs": "0011001100110011",
              "expected": "0"
            },
            {
              "inputs": "0011001100111000",
              "expected": "1"
            }
          ],
          "hints": [
            "Compare from MSB (bit 7) to LSB (bit 0)",
            "If A7 > B7, then A > B",
            "If A7 = B7, check A6 vs B6, and so on...",
            "This requires cascading comparisons"
          ]
        },
        {
          "id": "lvl.8bit.leftshift.1",
          "chapterId": "ch.8bit",
          "name": "8-Bit Left Shifter",
          "description": "Shift all bits left by 1 position. Bit 7 receives bit 6, bit 6 receives bit 5, and so on. Bit 0 becomes 0. Fun fact: shifting left by 1 is the same as multiplying by 2!",
          "inputCount": 1,
          "outputCount": 1,
          "inputBitCounts": [
            8
          ],
          "outputBitCounts": [
            8
          ],
          "inputPinLabels": [
            {
              "name": "Data",
              "abbr": "IN"
            }
          ],
          "outputPinLabels": [
            {
              "name": "Shifted",
              "abbr": "OUT"
            }
          ],
          "testVectors": [
            {
              "inputs": "00000000",
              "expected": "00000000"
            },
            {
              "inputs": "00000001",
              "expected": "00000010"
            },
            {
              "inputs": "00000010",
              "expected": "00000100"
            },
            {
              "inputs": "00000100",
              "expected": "00001000"
            },
            {
              "inputs": "00001000",
              "expected": "00010000"
            },
            {
              "inputs": "00010000",
              "expected": "00100000"
            },
            {
              "inputs": "00100000",
              "expected": "01000000"
            },
            {
              "inputs": "01000000",
              "expected": "10000000"
            },
            {
              "inputs": "10000000",
              "expected": "00000000"
            },
            {
              "inputs": "11111111",
              "expected": "11111110"
            },
            {
              "inputs": "10101010",
              "expected": "01010100"
            },
            {
              "inputs": "01010101",
              "expected": "10101010"
            },
            {
              "inputs": "11110000",
              "expected": "11100000"
            },
            {
              "inputs": "00001111",
              "expected": "00011110"
            },
            {
              "inputs": "10011001",
              "expected": "00110010"
            },
            {
              "inputs": "01100110",
              "expected": "11001100"
            },
            {
              "inputs": "11001100",
              "expected": "10011000"
            },
            {
              "inputs": "00110011",
              "expected": "01100110"
            },
            {
              "inputs": "11100111",
              "expected": "11001110"
            },
            {
              "inputs": "00011000",
              "expected": "00110000"
            }
          ],
          "hints": [
            "Connect IN6 to OUT7, IN5 to OUT6, etc.",
            "OUT0 is always 0",
            "This is just wire routing - no gates needed!"
          ]
        },
        {
          "id": "lvl.8bit.incrementer.1",
          "chapterId": "ch.8bit",
          "name": "8-Bit Incrementer",
          "description": "Add 1 to the 8-bit input. This is a special case of addition used everywhere in computers - incrementing program counters, array indices, loop counters, etc.",
          "inputCount": 1,
          "outputCount": 1,
          "inputBitCounts": [
            8
          ],
          "outputBitCounts": [
            8
          ],
          "inputPinLabels": [
            {
              "name": "Data",
              "abbr": "IN"
            }
          ],
          "outputPinLabels": [
            {
              "name": "Incremented",
              "abbr": "OUT"
            }
          ],
          "testVectors": [
            {
              "inputs": "00000000",
              "expected": "00000001"
            },
            {
              "inputs": "00000001",
              "expected": "00000010"
            },
            {
              "inputs": "00000010",
              "expected": "00000011"
            },
            {
              "inputs": "00000011",
              "expected": "00000100"
            },
            {
              "inputs": "00000111",
              "expected": "00001000"
            },
            {
              "inputs": "00001111",
              "expected": "00010000"
            },
            {
              "inputs": "00011111",
              "expected": "00100000"
            },
            {
              "inputs": "00111111",
              "expected": "01000000"
            },
            {
              "inputs": "01111111",
              "expected": "10000000"
            },
            {
              "inputs": "11111111",
              "expected": "00000000"
            },
            {
              "inputs": "10101010",
              "expected": "10101011"
            },
            {
              "inputs": "01010101",
              "expected": "01010110"
            },
            {
              "inputs": "11110000",
              "expected": "11110001"
            },
            {
              "inputs": "00001111",
              "expected": "00010000"
            },
            {
              "inputs": "10011001",
              "expected": "10011010"
            },
            {
              "inputs": "01100110",
              "expected": "01100111"
            },
            {
              "inputs": "11001100",
              "expected": "11001101"
            },
            {
              "inputs": "00110011",
              "expected": "00110100"
            },
            {
              "inputs": "11100111",
              "expected": "11101000"
            },
            {
              "inputs": "00011000",
              "expected": "00011001"
            }
          ],
          "hints": [
            "This is adding 1 to the input",
            "You can use an 8-bit adder with B=00000001 and Cin=0",
            "Or chain full adders with the first Cin=1 and all B inputs=0"
          ]
        },
        {
          "id": "lvl.8bit.alu.1",
          "chapterId": "ch.8bit",
          "name": "Simple 8-Bit ALU",
          "description": "Build a simple 8-bit Arithmetic Logic Unit with 4 operations selected by 2 control bits (OP1, OP0): 00=AND, 01=OR, 10=ADD, 11=XOR. This is the capstone challenge - combining everything you've learned into a real data processing unit!",
          "inputCount": 4,
          "outputCount": 2,
          "inputBitCounts": [
            1,
            1,
            8,
            8
          ],
          "outputBitCounts": [
            8,
            1
          ],
          "inputPinLabels": [
            {
              "name": "Operation Bit 1",
              "abbr": "OP1"
            },
            {
              "name": "Operation Bit 0",
              "abbr": "OP0"
            },
            {
              "name": "Data A",
              "abbr": "A"
            },
            {
              "name": "Data B",
              "abbr": "B"
            }
          ],
          "outputPinLabels": [
            {
              "name": "Result",
              "abbr": "RES"
            },
            {
              "name": "Carry/Flag",
              "abbr": "C"
            }
          ],
          "testVectors": [
            {
              "inputs": "000000000000000000",
              "expected": "000000000"
            },
            {
              "inputs": "001111111111111111",
              "expected": "111111110"
            },
            {
              "inputs": "101111111111111111",
              "expected": "000000000"
            },
            {
              "inputs": "111111111111111111",
              "expected": "000000000"
            },
            {
              "inputs": "001010101010101010",
              "expected": "101010100"
            },
            {
              "inputs": "010101010101010101",
              "expected": "010101010"
            },
            {
              "inputs": "101010101010101010",
              "expected": "101010101"
            },
            {
              "inputs": "111010101010101010",
              "expected": "000000000"
            },
            {
              "inputs": "001111000011110000",
              "expected": "111100000"
            },
            {
              "inputs": "010000111100001111",
              "expected": "000011110"
            },
            {
              "inputs": "101111000000001111",
              "expected": "111111110"
            },
            {
              "inputs": "110000111111110000",
              "expected": "111111110"
            },
            {
              "inputs": "001010101001010101",
              "expected": "101010100"
            },
            {
              "inputs": "010101010110101010",
              "expected": "111111110"
            },
            {
              "inputs": "100000000100000001",
              "expected": "000000010"
            },
            {
              "inputs": "110000000010000000",
              "expected": "100000000"
            },
            {
              "inputs": "001100110011001100",
              "expected": "110011000"
            },
            {
              "inputs": "010011001100110011",
              "expected": "001100110"
            },
            {
              "inputs": "101110011111100111",
              "expected": "111001110"
            },
            {
              "inputs": "110001100000011000",
              "expected": "000110000"
            },
            {
              "inputs": "001111111100000001",
              "expected": "000000001"
            },
            {
              "inputs": "011111111100000001",
              "expected": "111111110"
            },
            {
              "inputs": "101111111100000001",
              "expected": "100000001"
            },
            {
              "inputs": "111111111100000001",
              "expected": "111111100"
            },
            {
              "inputs": "000000000100000000",
              "expected": "000000000"
            },
            {
              "inputs": "010000000100000000",
              "expected": "000000000"
            },
            {
              "inputs": "100000000100000000",
              "expected": "000000010"
            },
            {
              "inputs": "110000000100000000",
              "expected": "000000000"
            },
            {
              "inputs": "001010101011111111",
              "expected": "101010100"
            },
            {
              "inputs": "011010101011111111",
              "expected": "111111110"
            }
          ],
          "hints": [
            "OP=00: A AND B (bitwise)",
            "OP=01: A OR B (bitwise)",
            "OP=10: A + B (addition)",
            "OP=11: A XOR B (bitwise)",
            "Use 4-to-1 multiplexers to select between operations",
            "Build each operation separately, then select the result"
          ]
        }
      ]
    },
    {
      "chapterId": "ch.coming-soon",
      "chapterName": "Coming Soon",
      "chapterDescription": "More exciting challenges are on the way! I am working on additional levels to expand your digital logic journey. Check back soon for new circuits to design, more complex challenges, and fresh ways to test your skills. Your adventure in logic design is just beginning!\n\nIf you wanna give feedback, have ideas for more levels or have a bug to report, reach out to @Carpen# on discord (discord link available in about menu).",
      "levels": []
    }
  ]
}